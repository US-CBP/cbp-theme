{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./node_modules/gatsby-image/index.js","webpack:///./node_modules/core-js/modules/es6.weak-map.js","webpack:///./node_modules/core-js/modules/es6.array.find-index.js","webpack:///./node_modules/core-js/modules/_collection-weak.js","webpack:///./src/ds-components/image.js","webpack:///./src/pages/foundation/interactivity.js"],"names":["createHTML","this","_interopRequireDefault","require","exports","__esModule","default","io","_assertThisInitialized2","_inheritsLoose2","_objectWithoutPropertiesLoose2","_extends2","_react","_propTypes","convertProps","props","convertedProps","resolutions","sizes","critical","fixed","fluid","loading","groupByMedia","concat","matchesMedia","_ref","media","isBrowser","window","matchMedia","matches","getImageSrcKey","_ref2","getCurrentSrcData","src","currentData","Array","isArray","some","image","hasArtDirectionSupport","foundMedia","findIndex","noMedia","imageCache","Object","create","inImageCache","hasNativeLazyLoadSupport","HTMLImageElement","prototype","hasIOSupport","IntersectionObserver","listeners","WeakMap","generateImageSources","imageVariants","map","_ref3","srcSet","srcSetWebp","createElement","Fragment","key","type","withMedia","without","forEach","variant","push","generateTracedSVGSources","_ref4","tracedSVG","generateBase64Sources","_ref5","base64","generateNoscriptSource","_ref6","isWebp","listenToIntersections","el","cb","observer","entries","entry","has","target","get","isIntersecting","intersectionRatio","unobserve","delete","rootMargin","observe","set","noscriptImg","title","alt","width","height","crossOrigin","draggable","join","Placeholder","forwardRef","ref","generateSources","spreadProps","ariaHidden","baseImage","Img","length","style","onLoad","onError","otherProps","position","top","left","objectFit","objectPosition","propTypes","object","func","Image","_React$Component","_this","call","seenBefore","isCritical","addNoScript","fadeIn","useIOSupport","isVisible","state","imgLoaded","imgCached","imageRef","createRef","placeholderRef","handleImageLoaded","bind","handleRef","_proto","componentDidMount","onStartLoad","wasCached","img","current","complete","componentWillUnmount","cleanUpListeners","_this2","imageInCache","setState","currentSrc","render","_convertProps","className","_convertProps$style","_convertProps$imgStyl","imgStyle","_convertProps$placeho","placeholderStyle","placeholderClassName","backgroundColor","durationFadeIn","Tag","itemProp","shouldReveal","shouldFadeIn","imageStyle","opacity","transition","bgColor","delayHideStyle","transitionDelay","imagePlaceholderStyle","placeholderImageProps","overflow","maxWidth","maxHeight","JSON","stringify","paddingBottom","aspectRatio","bottom","right","dangerouslySetInnerHTML","__html","_imageVariants","_image","divStyle","display","Component","defaultProps","fixedObject","shape","number","isRequired","string","srcWebp","fluidObject","oneOfType","arrayOf","bool","oneOf","_default","InternalMap","global","each","redefine","meta","assign","weak","isObject","validate","NATIVE_WEAK_MAP","IS_IE11","ActiveXObject","getWeak","isExtensible","uncaughtFrozenStore","ufstore","wrapper","arguments","undefined","methods","data","_i","value","def","$WeakMap","module","getConstructor","NEED","proto","method","a","b","_f","result","$export","$find","KEY","forced","P","F","callbackfn","redefineAll","anObject","anInstance","forOf","createArrayMethod","$has","arrayFind","arrayFindIndex","id","that","_l","UncaughtFrozenStore","findUncaughtFrozen","store","it","index","splice","NAME","IS_MAP","ADDER","C","iterable","_t","imgName","size","query","allImageSharp","edges","find","edge","node","originalName","contentType","selectedClassName","href","name","role","aria-level","cursor"],"mappings":"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","file":"component---src-pages-foundation-interactivity-js-d24fc21f275ec1316ae1.js","sourcesContent":["'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar logDeprecationNotice = function logDeprecationNotice(prop, replacement) {\n  if (process.env.NODE_ENV === \"production\") {\n    return;\n  }\n\n  console.log(\"\\n    The \\\"\" + prop + \"\\\" prop is now deprecated and will be removed in the next major version\\n    of \\\"gatsby-image\\\".\\n    \");\n\n  if (replacement) {\n    console.log(\"Please use \" + replacement + \" instead of \\\"\" + prop + \"\\\".\");\n  }\n}; // Handle legacy props during their deprecation phase\n\n\nvar convertProps = function convertProps(props) {\n  var convertedProps = (0, _extends2.default)({}, props);\n  var resolutions = convertedProps.resolutions,\n      sizes = convertedProps.sizes,\n      critical = convertedProps.critical;\n\n  if (resolutions) {\n    convertedProps.fixed = resolutions;\n    delete convertedProps.resolutions;\n  }\n\n  if (sizes) {\n    convertedProps.fluid = sizes;\n    delete convertedProps.sizes;\n  }\n\n  if (critical) {\n    logDeprecationNotice(\"critical\", \"the native \\\"loading\\\" attribute\");\n    convertedProps.loading = \"eager\";\n  } // convert fluid & fixed to arrays so we only have to work with arrays\n\n\n  if (convertedProps.fluid) {\n    convertedProps.fluid = groupByMedia([].concat(convertedProps.fluid));\n  }\n\n  if (convertedProps.fixed) {\n    convertedProps.fixed = groupByMedia([].concat(convertedProps.fixed));\n  }\n\n  return convertedProps;\n};\n/**\n * Checks if fluid or fixed are art-direction arrays.\n *\n * @param currentData  {{media?: string}[]}   The props to check for images.\n * @return {boolean}\n */\n\n\nvar hasArtDirectionSupport = function hasArtDirectionSupport(currentData) {\n  return !!currentData && Array.isArray(currentData) && currentData.some(function (image) {\n    return typeof image.media !== \"undefined\";\n  });\n};\n/**\n * Tries to detect if a media query matches the current viewport.\n * @property media   {{media?: string}}  A media query string.\n * @return {boolean}\n */\n\n\nvar matchesMedia = function matchesMedia(_ref) {\n  var media = _ref.media;\n  return media ? isBrowser && !!window.matchMedia(media).matches : false;\n};\n/**\n * Find the source of an image to use as a key in the image cache.\n * Use `the first image in either `fixed` or `fluid`\n * @param {{fluid: {src: string, media?: string}[], fixed: {src: string, media?: string}[]}} args\n * @return {string}\n */\n\n\nvar getImageSrcKey = function getImageSrcKey(_ref2) {\n  var fluid = _ref2.fluid,\n      fixed = _ref2.fixed;\n  var data = fluid ? getCurrentSrcData(fluid) : getCurrentSrcData(fixed);\n  return data.src;\n};\n/**\n * Returns the current src - Preferably with art-direction support.\n * @param currentData  {{media?: string}[], maxWidth?: Number, maxHeight?: Number}   The fluid or fixed image array.\n * @return {{src: string, media?: string, maxWidth?: Number, maxHeight?: Number}}\n */\n\n\nvar getCurrentSrcData = function getCurrentSrcData(currentData) {\n  if (isBrowser && hasArtDirectionSupport(currentData)) {\n    // Do we have an image for the current Viewport?\n    var foundMedia = currentData.findIndex(matchesMedia);\n\n    if (foundMedia !== -1) {\n      return currentData[foundMedia];\n    } // No media matches, select first element without a media condition\n\n\n    var noMedia = currentData.findIndex(function (image) {\n      return typeof image.media === \"undefined\";\n    });\n\n    if (noMedia !== -1) {\n      return currentData[noMedia];\n    }\n  } // Else return the first image.\n\n\n  return currentData[0];\n}; // Cache if we've seen an image before so we don't bother with\n// lazy-loading & fading in on subsequent mounts.\n\n\nvar imageCache = Object.create({});\n\nvar inImageCache = function inImageCache(props) {\n  var convertedProps = convertProps(props); // Find src\n\n  var src = getImageSrcKey(convertedProps);\n  return imageCache[src] || false;\n};\n\nvar activateCacheForImage = function activateCacheForImage(props) {\n  var convertedProps = convertProps(props); // Find src\n\n  var src = getImageSrcKey(convertedProps);\n  imageCache[src] = true;\n}; // Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\n\n\nvar hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nvar isBrowser = typeof window !== \"undefined\";\nvar hasIOSupport = isBrowser && window.IntersectionObserver;\nvar io;\nvar listeners = new WeakMap();\n\nfunction getIO() {\n  if (typeof io === \"undefined\" && typeof window !== \"undefined\" && window.IntersectionObserver) {\n    io = new window.IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        if (listeners.has(entry.target)) {\n          var cb = listeners.get(entry.target); // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0\n\n          if (entry.isIntersecting || entry.intersectionRatio > 0) {\n            io.unobserve(entry.target);\n            listeners.delete(entry.target);\n            cb();\n          }\n        }\n      });\n    }, {\n      rootMargin: \"200px\"\n    });\n  }\n\n  return io;\n}\n\nfunction generateImageSources(imageVariants) {\n  return imageVariants.map(function (_ref3) {\n    var src = _ref3.src,\n        srcSet = _ref3.srcSet,\n        srcSetWebp = _ref3.srcSetWebp,\n        media = _ref3.media,\n        sizes = _ref3.sizes;\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {\n      key: src\n    }, srcSetWebp && /*#__PURE__*/_react.default.createElement(\"source\", {\n      type: \"image/webp\",\n      media: media,\n      srcSet: srcSetWebp,\n      sizes: sizes\n    }), /*#__PURE__*/_react.default.createElement(\"source\", {\n      media: media,\n      srcSet: srcSet,\n      sizes: sizes\n    }));\n  });\n} // Return an array ordered by elements having a media prop, does not use\n// native sort, as a stable sort is not guaranteed by all browsers/versions\n\n\nfunction groupByMedia(imageVariants) {\n  var withMedia = [];\n  var without = [];\n  imageVariants.forEach(function (variant) {\n    return (variant.media ? withMedia : without).push(variant);\n  });\n\n  if (without.length > 1 && process.env.NODE_ENV !== \"production\") {\n    console.warn(\"We've found \" + without.length + \" sources without a media property. They might be ignored by the browser, see: https://www.gatsbyjs.org/packages/gatsby-image/#art-directing-multiple-images\");\n  }\n\n  return [].concat(withMedia, without);\n}\n\nfunction generateTracedSVGSources(imageVariants) {\n  return imageVariants.map(function (_ref4) {\n    var src = _ref4.src,\n        media = _ref4.media,\n        tracedSVG = _ref4.tracedSVG;\n    return /*#__PURE__*/_react.default.createElement(\"source\", {\n      key: src,\n      media: media,\n      srcSet: tracedSVG\n    });\n  });\n}\n\nfunction generateBase64Sources(imageVariants) {\n  return imageVariants.map(function (_ref5) {\n    var src = _ref5.src,\n        media = _ref5.media,\n        base64 = _ref5.base64;\n    return /*#__PURE__*/_react.default.createElement(\"source\", {\n      key: src,\n      media: media,\n      srcSet: base64\n    });\n  });\n}\n\nfunction generateNoscriptSource(_ref6, isWebp) {\n  var srcSet = _ref6.srcSet,\n      srcSetWebp = _ref6.srcSetWebp,\n      media = _ref6.media,\n      sizes = _ref6.sizes;\n  var src = isWebp ? srcSetWebp : srcSet;\n  var mediaAttr = media ? \"media=\\\"\" + media + \"\\\" \" : \"\";\n  var typeAttr = isWebp ? \"type='image/webp' \" : \"\";\n  var sizesAttr = sizes ? \"sizes=\\\"\" + sizes + \"\\\" \" : \"\";\n  return \"<source \" + typeAttr + mediaAttr + \"srcset=\\\"\" + src + \"\\\" \" + sizesAttr + \"/>\";\n}\n\nfunction generateNoscriptSources(imageVariants) {\n  return imageVariants.map(function (variant) {\n    return (variant.srcSetWebp ? generateNoscriptSource(variant, true) : \"\") + generateNoscriptSource(variant);\n  }).join(\"\");\n}\n\nvar listenToIntersections = function listenToIntersections(el, cb) {\n  var observer = getIO();\n\n  if (observer) {\n    observer.observe(el);\n    listeners.set(el, cb);\n  }\n\n  return function () {\n    observer.unobserve(el);\n    listeners.delete(el);\n  };\n};\n\nvar noscriptImg = function noscriptImg(props) {\n  // Check if prop exists before adding each attribute to the string output below to prevent\n  // HTML validation issues caused by empty values like width=\"\" and height=\"\"\n  var src = props.src ? \"src=\\\"\" + props.src + \"\\\" \" : \"src=\\\"\\\" \"; // required attribute\n\n  var sizes = props.sizes ? \"sizes=\\\"\" + props.sizes + \"\\\" \" : \"\";\n  var srcSet = props.srcSet ? \"srcset=\\\"\" + props.srcSet + \"\\\" \" : \"\";\n  var title = props.title ? \"title=\\\"\" + props.title + \"\\\" \" : \"\";\n  var alt = props.alt ? \"alt=\\\"\" + props.alt + \"\\\" \" : \"alt=\\\"\\\" \"; // required attribute\n\n  var width = props.width ? \"width=\\\"\" + props.width + \"\\\" \" : \"\";\n  var height = props.height ? \"height=\\\"\" + props.height + \"\\\" \" : \"\";\n  var crossOrigin = props.crossOrigin ? \"crossorigin=\\\"\" + props.crossOrigin + \"\\\" \" : \"\";\n  var loading = props.loading ? \"loading=\\\"\" + props.loading + \"\\\" \" : \"\";\n  var draggable = props.draggable ? \"draggable=\\\"\" + props.draggable + \"\\\" \" : \"\";\n  var sources = generateNoscriptSources(props.imageVariants);\n  return \"<picture>\" + sources + \"<img \" + loading + width + height + sizes + srcSet + src + alt + title + crossOrigin + draggable + \"style=\\\"position:absolute;top:0;left:0;opacity:1;width:100%;height:100%;object-fit:cover;object-position:center\\\"/></picture>\";\n}; // Earlier versions of gatsby-image during the 2.x cycle did not wrap\n// the `Img` component in a `picture` element. This maintains compatibility\n// until a breaking change can be introduced in the next major release\n\n\nvar Placeholder = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  var src = props.src,\n      imageVariants = props.imageVariants,\n      generateSources = props.generateSources,\n      spreadProps = props.spreadProps,\n      ariaHidden = props.ariaHidden;\n\n  var baseImage = /*#__PURE__*/_react.default.createElement(Img, (0, _extends2.default)({\n    ref: ref,\n    src: src\n  }, spreadProps, {\n    ariaHidden: ariaHidden\n  }));\n\n  return imageVariants.length > 1 ? /*#__PURE__*/_react.default.createElement(\"picture\", null, generateSources(imageVariants), baseImage) : baseImage;\n});\n\nvar Img = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  var sizes = props.sizes,\n      srcSet = props.srcSet,\n      src = props.src,\n      style = props.style,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      loading = props.loading,\n      draggable = props.draggable,\n      ariaHidden = props.ariaHidden,\n      otherProps = (0, _objectWithoutPropertiesLoose2.default)(props, [\"sizes\", \"srcSet\", \"src\", \"style\", \"onLoad\", \"onError\", \"loading\", \"draggable\", \"ariaHidden\"]);\n  return /*#__PURE__*/_react.default.createElement(\"img\", (0, _extends2.default)({\n    \"aria-hidden\": ariaHidden,\n    sizes: sizes,\n    srcSet: srcSet,\n    src: src\n  }, otherProps, {\n    onLoad: onLoad,\n    onError: onError,\n    ref: ref,\n    loading: loading,\n    draggable: draggable,\n    style: (0, _extends2.default)({\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    }, style)\n  }));\n});\n\nImg.propTypes = {\n  style: _propTypes.default.object,\n  onError: _propTypes.default.func,\n  onLoad: _propTypes.default.func\n};\n\nvar Image = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(Image, _React$Component);\n\n  function Image(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // If this image has already been loaded before then we can assume it's\n    // already in the browser cache so it's cheap to just show directly.\n\n    _this.seenBefore = isBrowser && inImageCache(props);\n    _this.isCritical = props.loading === \"eager\" || props.critical;\n    _this.addNoScript = !(_this.isCritical && !props.fadeIn);\n    _this.useIOSupport = !hasNativeLazyLoadSupport && hasIOSupport && !_this.isCritical && !_this.seenBefore;\n    var isVisible = _this.isCritical || isBrowser && (hasNativeLazyLoadSupport || !_this.useIOSupport);\n    _this.state = {\n      isVisible: isVisible,\n      imgLoaded: false,\n      imgCached: false,\n      fadeIn: !_this.seenBefore && props.fadeIn\n    };\n    _this.imageRef = /*#__PURE__*/_react.default.createRef();\n    _this.placeholderRef = props.placeholderRef || /*#__PURE__*/_react.default.createRef();\n    _this.handleImageLoaded = _this.handleImageLoaded.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  var _proto = Image.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.state.isVisible && typeof this.props.onStartLoad === \"function\") {\n      this.props.onStartLoad({\n        wasCached: inImageCache(this.props)\n      });\n    }\n\n    if (this.isCritical) {\n      var img = this.imageRef.current;\n\n      if (img && img.complete) {\n        this.handleImageLoaded();\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.cleanUpListeners) {\n      this.cleanUpListeners();\n    }\n  } // Specific to IntersectionObserver based lazy-load support\n  ;\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    if (this.useIOSupport && ref) {\n      this.cleanUpListeners = listenToIntersections(ref, function () {\n        var imageInCache = inImageCache(_this2.props);\n\n        if (!_this2.state.isVisible && typeof _this2.props.onStartLoad === \"function\") {\n          _this2.props.onStartLoad({\n            wasCached: imageInCache\n          });\n        } // imgCached and imgLoaded must update after isVisible,\n        // Once isVisible is true, imageRef becomes accessible, which imgCached needs access to.\n        // imgLoaded and imgCached are in a 2nd setState call to be changed together,\n        // avoiding initiating unnecessary animation frames from style changes.\n\n\n        _this2.setState({\n          isVisible: true\n        }, function () {\n          _this2.setState({\n            imgLoaded: imageInCache,\n            // `currentSrc` should be a string, but can be `undefined` in IE,\n            // !! operator validates the value is not undefined/null/\"\"\n            // for lazyloaded components this might be null\n            // TODO fix imgCached behaviour as it's now false when it's lazyloaded\n            imgCached: !!(_this2.imageRef.current && _this2.imageRef.current.currentSrc)\n          });\n        });\n      });\n    }\n  };\n\n  _proto.handleImageLoaded = function handleImageLoaded() {\n    activateCacheForImage(this.props);\n    this.setState({\n      imgLoaded: true\n    });\n\n    if (this.props.onLoad) {\n      this.props.onLoad();\n    }\n  };\n\n  _proto.render = function render() {\n    var _convertProps = convertProps(this.props),\n        title = _convertProps.title,\n        alt = _convertProps.alt,\n        className = _convertProps.className,\n        _convertProps$style = _convertProps.style,\n        style = _convertProps$style === void 0 ? {} : _convertProps$style,\n        _convertProps$imgStyl = _convertProps.imgStyle,\n        imgStyle = _convertProps$imgStyl === void 0 ? {} : _convertProps$imgStyl,\n        _convertProps$placeho = _convertProps.placeholderStyle,\n        placeholderStyle = _convertProps$placeho === void 0 ? {} : _convertProps$placeho,\n        placeholderClassName = _convertProps.placeholderClassName,\n        fluid = _convertProps.fluid,\n        fixed = _convertProps.fixed,\n        backgroundColor = _convertProps.backgroundColor,\n        durationFadeIn = _convertProps.durationFadeIn,\n        Tag = _convertProps.Tag,\n        itemProp = _convertProps.itemProp,\n        loading = _convertProps.loading,\n        draggable = _convertProps.draggable;\n\n    var shouldReveal = this.state.fadeIn === false || this.state.imgLoaded;\n    var shouldFadeIn = this.state.fadeIn === true && !this.state.imgCached;\n    var imageStyle = (0, _extends2.default)({\n      opacity: shouldReveal ? 1 : 0,\n      transition: shouldFadeIn ? \"opacity \" + durationFadeIn + \"ms\" : \"none\"\n    }, imgStyle);\n    var bgColor = typeof backgroundColor === \"boolean\" ? \"lightgray\" : backgroundColor;\n    var delayHideStyle = {\n      transitionDelay: durationFadeIn + \"ms\"\n    };\n    var imagePlaceholderStyle = (0, _extends2.default)({\n      opacity: this.state.imgLoaded ? 0 : 1\n    }, shouldFadeIn && delayHideStyle, imgStyle, placeholderStyle);\n    var placeholderImageProps = {\n      title: title,\n      alt: !this.state.isVisible ? alt : \"\",\n      style: imagePlaceholderStyle,\n      className: placeholderClassName,\n      itemProp: itemProp\n    };\n\n    if (fluid) {\n      var imageVariants = fluid;\n      var image = getCurrentSrcData(fluid);\n      return /*#__PURE__*/_react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: (0, _extends2.default)({\n          position: \"relative\",\n          overflow: \"hidden\",\n          maxWidth: image.maxWidth ? image.maxWidth + \"px\" : null,\n          maxHeight: image.maxHeight ? image.maxHeight + \"px\" : null\n        }, style),\n        ref: this.handleRef,\n        key: \"fluid-\" + JSON.stringify(image.srcSet)\n      }, /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        style: {\n          width: \"100%\",\n          paddingBottom: 100 / image.aspectRatio + \"%\"\n        }\n      }), bgColor && /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          right: 0,\n          left: 0\n        }, shouldFadeIn && delayHideStyle)\n      }), image.base64 && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: image.base64,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateBase64Sources\n      }), image.tracedSVG && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: image.tracedSVG,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateTracedSVGSources\n      }), this.state.isVisible && /*#__PURE__*/_react.default.createElement(\"picture\", null, generateImageSources(imageVariants), /*#__PURE__*/_react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        sizes: image.sizes,\n        src: image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        loading: loading,\n        draggable: draggable\n      })), this.addNoScript && /*#__PURE__*/_react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, image, {\n            imageVariants: imageVariants\n          }))\n        }\n      }));\n    }\n\n    if (fixed) {\n      var _imageVariants = fixed;\n\n      var _image = getCurrentSrcData(fixed);\n\n      var divStyle = (0, _extends2.default)({\n        position: \"relative\",\n        overflow: \"hidden\",\n        display: \"inline-block\",\n        width: _image.width,\n        height: _image.height\n      }, style);\n\n      if (style.display === \"inherit\") {\n        delete divStyle.display;\n      }\n\n      return /*#__PURE__*/_react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: divStyle,\n        ref: this.handleRef,\n        key: \"fixed-\" + JSON.stringify(_image.srcSet)\n      }, bgColor && /*#__PURE__*/_react.default.createElement(Tag, {\n        \"aria-hidden\": true,\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          width: _image.width,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          height: _image.height\n        }, shouldFadeIn && delayHideStyle)\n      }), _image.base64 && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: _image.base64,\n        spreadProps: placeholderImageProps,\n        imageVariants: _imageVariants,\n        generateSources: generateBase64Sources\n      }), _image.tracedSVG && /*#__PURE__*/_react.default.createElement(Placeholder, {\n        ariaHidden: true,\n        ref: this.placeholderRef,\n        src: _image.tracedSVG,\n        spreadProps: placeholderImageProps,\n        imageVariants: _imageVariants,\n        generateSources: generateTracedSVGSources\n      }), this.state.isVisible && /*#__PURE__*/_react.default.createElement(\"picture\", null, generateImageSources(_imageVariants), /*#__PURE__*/_react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        width: _image.width,\n        height: _image.height,\n        sizes: _image.sizes,\n        src: _image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: _image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        loading: loading,\n        draggable: draggable\n      })), this.addNoScript && /*#__PURE__*/_react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, _image, {\n            imageVariants: _imageVariants\n          }))\n        }\n      }));\n    }\n\n    return null;\n  };\n\n  return Image;\n}(_react.default.Component);\n\nImage.defaultProps = {\n  fadeIn: true,\n  durationFadeIn: 500,\n  alt: \"\",\n  Tag: \"div\",\n  // We set it to `lazy` by default because it's best to default to a performant\n  // setting and let the user \"opt out\" to `eager`\n  loading: \"lazy\"\n};\n\nvar fixedObject = _propTypes.default.shape({\n  width: _propTypes.default.number.isRequired,\n  height: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string,\n  media: _propTypes.default.string\n});\n\nvar fluidObject = _propTypes.default.shape({\n  aspectRatio: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  sizes: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string,\n  media: _propTypes.default.string,\n  maxWidth: _propTypes.default.number,\n  maxHeight: _propTypes.default.number\n}); // If you modify these propTypes, please don't forget to update following files as well:\n// https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-image/index.d.ts\n// https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-image/README.md#gatsby-image-props\n// https://github.com/gatsbyjs/gatsby/blob/master/docs/docs/gatsby-image.md#gatsby-image-props\n\n\nImage.propTypes = {\n  resolutions: fixedObject,\n  sizes: fluidObject,\n  fixed: _propTypes.default.oneOfType([fixedObject, _propTypes.default.arrayOf(fixedObject)]),\n  fluid: _propTypes.default.oneOfType([fluidObject, _propTypes.default.arrayOf(fluidObject)]),\n  fadeIn: _propTypes.default.bool,\n  durationFadeIn: _propTypes.default.number,\n  title: _propTypes.default.string,\n  alt: _propTypes.default.string,\n  className: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n  // Support Glamor's css prop.\n  critical: _propTypes.default.bool,\n  crossOrigin: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  style: _propTypes.default.object,\n  imgStyle: _propTypes.default.object,\n  placeholderStyle: _propTypes.default.object,\n  placeholderClassName: _propTypes.default.string,\n  backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  onLoad: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onStartLoad: _propTypes.default.func,\n  Tag: _propTypes.default.string,\n  itemProp: _propTypes.default.string,\n  loading: _propTypes.default.oneOf([\"auto\", \"lazy\", \"eager\"]),\n  draggable: _propTypes.default.bool\n};\nvar _default = Image;\nexports.default = _default;","'use strict';\nvar global = require('./_global');\nvar each = require('./_array-methods')(0);\nvar redefine = require('./_redefine');\nvar meta = require('./_meta');\nvar assign = require('./_object-assign');\nvar weak = require('./_collection-weak');\nvar isObject = require('./_is-object');\nvar validate = require('./_validate-collection');\nvar NATIVE_WEAK_MAP = require('./_validate-collection');\nvar IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar InternalMap;\n\nvar wrapper = function (get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\n\nvar methods = {\n  // 23.3.3.3 WeakMap.prototype.get(key)\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  // 23.3.3.5 WeakMap.prototype.set(key, value)\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\n\n// 23.3 WeakMap Objects\nvar $WeakMap = module.exports = require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);\n\n// IE11 WeakMap frozen keys fix\nif (NATIVE_WEAK_MAP && IS_IE11) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      // store frozen objects on internal weakmap shim\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      // store all the rest on native weakmap\n      } return method.call(this, a, b);\n    });\n  });\n}\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","'use strict';\nvar redefineAll = require('./_redefine-all');\nvar getWeak = require('./_meta').getWeak;\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar createArrayMethod = require('./_array-methods');\nvar $has = require('./_has');\nvar validate = require('./_validate-collection');\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\n\n// fallback for uncaught frozen keys\nvar uncaughtFrozenStore = function (that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function () {\n  this.a = [];\n};\nvar findUncaughtFrozen = function (store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function (key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function (key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function (key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;\n    else this.a.push([key, value]);\n  },\n  'delete': function (key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;      // collection type\n      that._i = id++;      // collection id\n      that._l = undefined; // leak store for uncaught frozen objects\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.3.3.2 WeakMap.prototype.delete(key)\n      // 23.4.3.3 WeakSet.prototype.delete(value)\n      'delete': function (key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      // 23.3.3.4 WeakMap.prototype.has(key)\n      // 23.4.3.4 WeakSet.prototype.has(value)\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);\n    else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = ({ imgName, size }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allImageSharp {\n          edges {\n            node {\n              fluid(maxWidth: 500, quality: 90) {\n                ...GatsbyImageSharpFluid\n                originalName\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const image = data.allImageSharp.edges.find(\n        edge => edge.node.fluid.originalName === imgName\n      )\n      if (!image) {\n        return null\n      }\n\n      //Check to see if size is specified when component is called\n      if (size != null) {\n        return (\n          <div style={{ maxWidth: size }}>\n            <Img fluid={image.node.fluid} />\n          </div>\n        )\n      } else\n        return (\n          <div style={{ maxWidth: \"500px\" }}>\n            <Img fluid={image.node.fluid} />\n          </div>\n        )\n    }}\n  />\n)\nexport default Image\n","import React from \"react\"\nimport Layout from \"../../ds-components/layout/layout\"\nimport ContentHeader from \"../../ds-components/content-header/contentHeader\"\nimport SEO from \"../../ds-components/seo\"\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\"\nimport Image from \"../../ds-components/image\"\n\nexport default () => (\n  <Layout>\n    <SEO title=\"Interactivity\" />\n    <ContentHeader title=\"Interactivity\" contentType=\"foundation\" />\n\n    <Tabs className=\"tabs--scroll\">\n      <div className=\"tabs is-boxed\">\n        <TabList>\n          <Tab selectedClassName=\"is-active\">\n            <a href=\"#\">Basics</a>\n          </Tab>\n          <Tab selectedClassName=\"is-active\">\n            <a href=\"#\">Reference & Research</a>\n          </Tab>\n        </TabList>\n      </div>\n\n      <article className=\"spacing-wrapper\">\n        <TabPanel>\n          <section name=\"Basics\" id=\"Basics\">\n            <h2 className=\"cbp-heading-2\">Introduction</h2>\n            <p className=\"cbp-body \">\n              Digital products are primarily focused on communication, but they\n              also expect their users to do something with this information. At\n              CBP, our products enable legitimate trade and travel by presenting\n              our officers with information, and then allowing them to make a\n              decision on whether that person or thing has a legitimate reason\n              for entering or exiting our borders.\n            </p>\n\n            <h2 className=\"cbp-heading-2\">Nuggets of Knowledge</h2>\n            <div className=\"content\">\n              <ul>\n                <li>\n                  Do not hide information or functionality behind a hover state.\n                  Tool tips should be accessible by click or touch.\n                </li>\n\n                <li>\n                  The disabled state is absolutely not the same as \"off.\" An\n                  element in the off state can still be interacted with, while\n                  an item that is disabled cannot.\n                </li>\n\n                <li>\n                  Disabled elements cannot have additional states applied to\n                  them.\n                </li>\n\n                <li>\n                  If the condition that was disabling the element has been\n                  satisfied, immediately enable that element.\n                </li>\n\n                <li>\n                  Visited states can only be used for links inside large blocks\n                  of text.\n                </li>\n\n                <li>Uppercase text is for interactive elements only.</li>\n\n                <li>\n                  The system should give some form of visual cue within 400ms of\n                  a user taking an action. This indication should inform the\n                  user what the status of their action is, whether it be that\n                  the system is working on fulfilling their request, or provide\n                  the results of that action.\n                  {/*@TODO: insert anchor link here */}\n                </li>\n\n                <li>\n                  During user testing, if you discover that your users are\n                  frequently navigating via search, reconsider your overall site\n                  map and information architecture to make navigation more\n                  intuitive.\n                </li>\n\n                <li>\n                  Hover should let the user know exactly which interaction they\n                  are about to select and not be ambiguous about it.\n                </li>\n\n                <li>\n                  When gestures are available there should be appropriate visual\n                  cues to the user that something is interactive.\n                </li>\n\n                <li>\n                  The purpose in adding animation to an interactive element is\n                  to give visual feedback to the user that the system has\n                  received their input, not to decorate or entertain.\n                </li>\n\n                <li>\n                  \"Calls to Action\", or interactive elements that have special\n                  importance (like a submit button on a form), should be\n                  visually distinct enough to let your user know they are\n                  important.\n                </li>\n              </ul>\n            </div>\n\n            <hr />\n\n            <h2 className=\"cbp-heading-2\">Interactive States</h2>\n            <p className=\"cbp-body\">\n              The visual cues attributed to an interactive element can (and\n              should) interpret information about the current status of that\n              element. The differences in visual appearance between interactive\n              states have to straddle a fine line. They need to be different\n              enough that two similar elements in different interactive states\n              are distinguishable from each other, but aren't so different that\n              the user no longer can tell they are similar elements. These\n              states must be applied consistently across the Design System to\n              reinforce these patterns, or we risk diluting their intended\n              effects.\n            </p>\n            {/* @TODO: [image] graphic about states */}\n\n            <h3 className=\"cbp-heading-3\">Enabled State</h3>\n            <p className=\"cbp-body\">\n              The enabled state lets the user know that an element is\n              interactive. There are a number of ways we communicate to a user\n              that an element is enabled. Color, iconography, changes in\n              sentence case, and other treatments may be applied to elements to\n              give visual cues.\n            </p>\n            {/* @TODO: [image] example of enabled elements */}\n\n            <h3 className=\"cbp-heading-3\">Text Buttons and Uppercase</h3>\n            <p className=\"cbp-body\">\n              Text buttons (with or without a container) apply uppercase\n              formatting to give a user a visual cue that this element is\n              interactive. This allows buttons to exist without a container,\n              when necessary, to save space or create visual hierarchy while\n              still maintaining a symmetry of function. Do not use uppercase\n              letters on any element that is not interactive. When dealing with\n              abbreviations and acronyms (that are not interactive), please use\n              small-caps instead. For more information on caps please view the\n              <a href=\"typography\"> Typography section of Foundations here.</a>\n            </p>\n\n            <h3 className=\"cbp-heading-3\">Visited State</h3>\n            <p className=\"cbp-body\">\n              Interactive links embedded in blocks of text are the oldest forms\n              of interactivity on the web. In the beginning of the web that's\n              all there was. Because of the history people have with this\n              function, we align to those expectations. This means using (insert\n              blue) color and underlining the text. No other text on the page\n              should be underlined. If you are looking to add emphasis try\n              changing the weight of the text to bold or using italics. If text\n              is underlined, the user will expect it to be interactive. Another\n              design pattern found in these types of links is the \"visited\"\n              state. This means applying the slightly altered color of (insert\n              color) to give users a hint that they have visited that link\n              before. This can prevent users from the confusion of forgetting\n              what they clicked on previously. When thinking about using the\n              visited state, consider the following:\n            </p>\n            <div className=\"content\">\n              <ul>\n                <li>\n                  When you have multiple content links near each other the\n                  visited state helps our users know what they have and have not\n                  yet reviewed.\n                </li>\n                <li>\n                  These types of links connect a user with other content, either\n                  by sending them to other pages/applications, or other regions\n                  on the same page.\n                </li>\n                <li>Elements that take action should not use this state.</li>\n                <li>\n                  The visited state should only be applied to links inside\n                  blocks of body copy text. This should not be used as a general\n                  button or other interaction.\n                </li>\n                <li>\n                  The 8px minimum spacing between interactive elements still\n                  applies, so be careful about placing these links next to each\n                  other, otherwise your user is likely to click the wrong link.\n                  Learn more about{\" \"}\n                  <a href=\"layouts\">Spacing on its Foundations page here.</a>\n                </li>\n              </ul>\n            </div>\n\n            <p className=\"cbp-body\">\n              If your situation does not fit these narrow use cases, then do not\n              apply the visited state.\n            </p>\n\n            <h3 className=\"cbp-heading-3\">Disabled State</h3>\n            <p className=\"cbp-body\">\n              The disabled state lets the user know that the element is normally\n              interactive, but currently has some form of condition applied that\n              is keeping the user from interacting with it. It is good practice\n              to give a reason to the user as to why the element is currently\n              disabled.\n            </p>\n            <div className=\"content\">\n              <ul>\n                <li>\n                  The disabled state lets the user know that the element is\n                  normally interactive, but currently has some form of condition\n                  applied that is keeping the user from interacting with it. It\n                  is good practice to give a reason to the user as to why the\n                  element is currently disabled.\n                </li>\n\n                <li>\n                  With users on cursor-enabled devices, change the cursor to\n                  disabled to help reinforce its state.\n                </li>\n\n                <li>\n                  Disabled elements cannot have additional states applied to\n                  them.\n                </li>\n\n                <li>\n                  If the condition that was disabling the element has been\n                  satisfied, immediately enable that element. Do not wait for a\n                  validation event like submitting a form, etc.\n                </li>\n              </ul>\n            </div>\n\n            <h4 className=\"cbp-heading-4\">When to Hide and When to Disable</h4>\n            <p className=\"cbp-body\">\n              Deciding on whether or not to show a disabled element or hide it\n              is a tricky one. In both cases the user cannot interact with that\n              element. With showing an element in a disabled state though, you\n              can communicate something extra.\n            </p>\n            <p className=\"cbp-body\">\n              Disabled elements remind the user that the element is still there.\n              There are a lot of reasons why an element might be in a disabled\n              state. The user may be filling out a form and made a mistake on an\n              element that is throwing an error. You might want to disable the\n              submit call-to-action button to reinforce to the user that they\n              have to fix that error before they can proceed. Hiding it just\n              adds to the confusion.\n            </p>\n            <p className=\"cbp-body\">\n              In other examples, you might encounter situations where making one\n              selection changes your available options elsewhere on the page.\n              Disabling and not hiding this element gives the user a visual cue\n              about the consequences of this action. The exception to this is\n              when choosing an option enables or disables a large group of\n              choices. In this instance it might be better to show/hide these\n              options rather than showing them as disabled.\n            </p>\n            <p className=\"cbp-body\">\n              Carefully weigh the consequences of hiding elements within your\n              UI. Hiding an element in your layout always the possibility of\n              your user never finding it. Remember to cover your bases with\n              helpful copywriting and proper visual cues to let your users know\n              what choices are available, especially as you encounter\n              increasingly complicated forms.\n            </p>\n\n            <h4 className=\"cbp-heading-4\">What Can't be Disabled</h4>\n            <p className=\"cbp-body\">\n              Disabled states should not be applied to application or\n              enterprise-level navigation. If there is a section of an\n              application that is purposefully hidden from a particular user\n              (ie. because they do not have the proper access or clearance) omit\n              that section. Remember the \"Need to Know\" principle. To learn\n              more, visit the{\" \"}\n              <a href=\"navigation\">Navigation section of foundations here.</a>\n            </p>\n\n            <h3 className=\"cbp-heading-3\">Hover State</h3>\n            <p className=\"cbp-body\">\n              On devices that utilize a cursor, this state change helps\n              reinforce that an element is interactive and that a particular\n              element is ready to be interacted with. Usually this is coupled\n              with a change in form for the cursor.\n            </p>\n            <p className=\"cbp-body\">\n              All interactive elements can have a hover state, though on touch\n              devices this state will be unavailable. This treatment can be\n              applied to a part, or the whole component. A good example is a\n              card. Some cards only have one interaction associated with them,\n              so applying a hover state to the whole card makes sense. Other\n              cards may be more complicated with several different parts that\n              have separate interactions. Hover should let the user know exactly\n              which interaction they are about to select and not be ambiguous\n              about it. Hover states can be combined with active, selected, or\n              pressed states where appropriate.\n            </p>\n            <p className=\"cbp-body\">\n              Only one element on the page can have the hover state applied at a\n              time.\n            </p>\n            <p className=\"cbp-body\">\n              Some elements may incorporate a change in elevation to help\n              reinforce a hover state.\n            </p>\n\n            <Image imgName=\"interactivity-hover.png\" size=\"700px\" />\n\n            <h4 className=\"cbp-heading-4\">\n              Using Hover to Hide Elements or Functionality\n            </h4>\n            <p className=\"cbp-body\">\n              As more and more of our users interact with our products on\n              touch-enabled devices, information that is concealed behind a\n              hover state becomes problematic. This is simply because touch\n              devices do not have a hover state. They only respond when the user\n              touches the screen.\n            </p>\n            <p className=\"cbp-body\">\n              Tool tips are a common element for hiding hints, or explanations\n              to save screen real estate. The problem is our users on phones and\n              tablets will have no idea it's there and have no way of accessing\n              it. All interactions should be accessible by click or touch, not\n              hidden behind hover. The hover state is meant to inform cursor\n              users which elements they are able to interact with.\n            </p>\n\n            <h3 className=\"cbp-heading-3\">Focused State</h3>\n            <p className=\"cbp-body\">\n              This state is very similar to hover, but instead of a cursor\n              selecting an element it is a keyboard or other assistive\n              technology. The focused state has the same overall function as the\n              hover state and the element will be styled identically, aside from\n              the addition of a cursor.\n            </p>\n            <div className=\"content\">\n              <ul>\n                <li>\n                  Only one element on the page can have the focused state\n                  applied.\n                </li>\n                <li>\n                  When using the \"Tab\" key or other assistive technology to move\n                  from one interactive element to the next, the next item to\n                  receive focus must follow \"logical reading order\" based on the\n                  particular composition of the page.\n                </li>\n                <li>\n                  Some elements like text input fields, can receive focus from\n                  click or tap interactions.\n                </li>\n                <li>\n                  Just as with hover, the focus state cannot be used to reveal\n                  hidden information or functionality.\n                </li>\n                <li>\n                  Focus can be combined with active, selected, on/off states\n                  where appropriate.\n                </li>\n                Because this state is so intrinsically aligned to accessibility\n                concerns please view the accessibility concerns, section below\n                for more information.\n                {/* @TODO: include anchor link to section on focus issues */}\n              </ul>\n            </div>\n\n            <h3 className=\"cbp-heading-3\">Selected State</h3>\n            <p className=\"cbp-body\">\n              This state communicates to the user that they have made a\n              selection from a group of options. Selected states can be applied\n              to a whole container of a component or to elements within\n              depending on circumstances. Common elements that utilize this\n              state are cards, lists, data tables, menus, etc.\n            </p>\n            <p className=\"cbp-body\">\n              Selected states can be combined with hover, focus, pressed, or\n              dragged states where appropriate.\n            </p>\n            <p className=\"cbp-body\">\n              One or many options may be selected depending on the component.\n              There should be clear visual cues as to which options are selected\n              and those that are not.\n            </p>\n            <p className=\"cbp-body\">\n              Selecting an element may enable/hide/reveal other elements on the\n              page when appropriate.\n            </p>\n\n            <Image imgName=\"interactivity-selected.png\" size=\"700px\" />\n            <Image imgName=\"interactivity-selected2.png\" size=\"700px\" />\n\n            <h3 className=\"cbp-heading-3\">Active State</h3>\n            <p className=\"cbp-body\">\n              This state lets the user know which option is currently active. It\n              is common in navigational elements like tabs, to show what choice\n              a user has made, or show a default option.\n            </p>\n            <p className=\"cbp-body\">\n              Active states can be combined with hover, focus, or pressed states\n              where appropriate.\n            </p>\n            <p className=\"cbp-body\">\n              Within a grouping, only one element can have the active state\n              applied at a time.\n            </p>\n\n            <Image imgName=\"interactivity-active.png\" size=\"700px\" />\n\n            <h3 className=\"cbp-heading-3\">Pressed State</h3>\n            <p className=\"cbp-body\">\n              This state communicates that a user is currently interacting with\n              an element via click, tap on a touch-enabled device, or by other\n              assistive technology.\n            </p>\n            <div className=\"content\">\n              <ul>\n                <li>\n                  This state should only be applied to one element at a time as\n                  the user interacts with the page.\n                </li>\n\n                <li>\n                  Pressed states can be combined with hover, focus, selected,\n                  active, and on/off states where appropriate.\n                </li>\n\n                <li>\n                  The system should give some form of visual cue within 400ms of\n                  a user taking an action. This indication should inform the\n                  user what the status of their action is, whether it be that\n                  the system is working on fulfilling their request, or provide\n                  the results of that action. (read the section below on the\n                  Doherty Threshold for more information).\n                  {/* @TODO: Insert anchor link here */}\n                </li>\n              </ul>\n            </div>\n            <p className=\"cbp-body\">\n              The pressed state, much more than other states, is visually\n              associated with animations once a user makes an actual choice. The\n              length and complexity of this animation should be relative to its\n              importance in the overall hierarchy on the page. The animation on\n              clicking a check box should be rather fast and short relative to\n              something like a visualization. For more information on animation\n              please visit the{\" \"}\n              <a href=\"animation\">\n                Animation/Motion section in Foundations here.\n              </a>\n            </p>\n\n            <Image imgName=\"interactivity-pressed.png\" size=\"700px\" />\n\n            <h3 className=\"cbp-heading-3\">Dragged State</h3>\n            <p className=\"cbp-body\">\n              This state lets the user know that the element they have \"clicked\n              and dragged\" or dragged by touch, is currently being interacted\n              with. Dragging objects is most commonly used to reorder items, or\n              add items to a group or process (like upload). When used with a\n              cursor-enabled device, the cursor should be expected to change\n              form.\n            </p>\n            <div className=\"content\">\n              <ul>\n                <li>\n                  It is common to use certain iconography to give the user a\n                  visual cue that an item can be dragged.\n                </li>\n\n                <li>\n                  Only one object (or a grouping of selected objects where\n                  appropriate) can be dragged at a time.\n                </li>\n\n                <li>\n                  For non-cosmetic interactions (not just reordering) you should\n                  be prepared to offer an alternate method of interaction to\n                  meet accessibility standards. For example on upload, you could\n                  drag a file to an area or click a button to enable the user to\n                  search their local files. Otherwise you may lock out certain\n                  users from this functionality.\n                </li>\n              </ul>\n            </div>\n\n            <h3 className=\"cbp-heading-3\">On/Off States</h3>\n            <p className=\"cbp-body\">\n              On/off states let the user know which option in a grouping is\n              currently selected, where only one option can be selected at a\n              time. Groupings like toggles or switches commonly have these\n              states applied and must have at least one of the available options\n              selected (on), with the first option in the group usually selected\n              by default. Some groupings like radio buttons and check boxes are\n              completely optional, but still only allow for one on state at a\n              time.\n            </p>\n\n            <h3 className=\"cbp-heading-3\">Error State</h3>\n            <p className=\"cbp-body\">\n              This lets the user know that something about their input has\n              returned an error from the system. For more guidance on error\n              handling, please see the Communication section of Foundations\n              here.\n            </p>\n\n            <hr />\n\n            <h2 className=\"cbp-heading-2\">\n              Device Specific Interactions & Gestures\n            </h2>\n            <p className=\"cbp-body\">\n              Mobile phones and tablets, as well as some other devices, have\n              brought new ways to interact with digital products. Some of these\n              interactions simply replace interactions that occur with a\n              keyboard and mouse, while others extend these products into the\n              physical world. Because we are not interacting with these products\n              in the traditional sense, either by touching or by using another\n              new method, we need to make sure these interactions are reinforced\n              with sound and haptics to give appropriate feedback. The speed of\n              interaction should match that of the input the user is giving. For\n              instance, if the user does a fast swipe to scroll on the screen,\n              the page should scroll fast and go further than if the user had\n              made a small, slow scroll.\n            </p>\n            <p className=\"cbp-body\">\n              When gestures are available there should be appropriate visual\n              cues to the user that something is interactive. In some cases\n              periodic user onboarding might help with this. Icons and small\n              animations are great affordances to indicate a gesture is\n              available.\n            </p>\n            <p className=\"cbp-body\">\n              Gestures should always align to the user's expectations and be\n              intuitive. Pinching to select something would be weird. Instead\n              stick with its more common user case, zoom.\n            </p>\n\n            <h3 className=\"cbp-heading-3\">Touch Gestures</h3>\n\n            <h4 className=\"cbp-heading-4\">Tap</h4>\n            <p className=\"cbp-body\">\n              The tap gesture generally replaces the click function on a mouse.\n              There might be some instances where a double tap, or a press and\n              hold function would also be applicable.\n            </p>\n\n            <h4 className=\"cbp-heading-4\">Scroll and Pan</h4>\n            <p className=\"cbp-body\">\n              This replaces the scroll function on your mouse or the scroll bar.\n              The main exception here is that the speed of input from the user\n              has much greater range than that of a traditional input method.\n              Horizontal scrolling on mobile devices should be limited to maps\n              and other such visualizations.\n            </p>\n\n            <h4 className=\"cbp-heading-4\">Drag</h4>\n            <p className=\"cbp-body\">\n              The drag gesture allows the user to move panels and other elements\n              at varied elevations in and out of the viewable area. A long tap\n              can activate this gesture to reorder/add items in a group or\n              function.\n            </p>\n\n            <h4 className=\"cbp-heading-4\">Swipe</h4>\n            <p className=\"cbp-body\">\n              Swipe allows the user to move between items horizontally. Cards in\n              a carousel are a great example of this.\n            </p>\n\n            <h4 className=\"cbp-heading-4\">Slide (Single Axis Drag)</h4>\n            <p className=\"cbp-body\">\n              Essentially this is a tap and drag without the need to do a long\n              tap. This would apply to components like sliders.\n            </p>\n\n            <h4 className=\"cbp-heading-4\">Pinch</h4>\n            <p className=\"cbp-body\">\n              This gesture allows the user to zoom in and out of content where\n              appropriate. Most commonly used with maps.\n            </p>\n\n            <h3 className=\"cbp-heading-3\">Device Interactions</h3>\n\n            <h4 className=\"cbp-heading-4\">Movement</h4>\n            <p className=\"cbp-body\">\n              Most mobile phones and tablets have accelerometers and onboard\n              GPS. Some apps have interactions activated by \"shaking\" a device.\n              Additionally simulated movements the user might perform utilize\n              these functions to mimic real life actions like casting from a\n              fishing rod or tossing an object.\n            </p>\n\n            <h4 className=\"cbp-heading-4\">Location</h4>\n            <p className=\"cbp-body\">\n              Some interactive elements might utilize the onboard GPS to track\n              movement and trigger actions based on location and travel. A good\n              example of this might be a user physically entering a geofenced\n              area with their mobile device which triggers some sort of\n              notification.\n            </p>\n\n            <h4 className=\"cbp-heading-4\">NFC and RFID</h4>\n            <p className=\"cbp-body\">\n              Onboard communication sensors allow mobile devices to interact\n              with physical objects in the real world like door locks, payment\n              systems, and package lockers.\n            </p>\n\n            <h4 className=\"cbp-heading-4\">Camera</h4>\n            <p className=\"cbp-body\">\n              Devices with onboard cameras may provide extra opportunities for\n              interaction by allowing features like OCR (optical character\n              recognition), uploading photos, and augmented reality.\n            </p>\n\n            <h4 className=\"cbp-heading-4\">Wearables</h4>\n            <p className=\"cbp-body\">\n              Smartwatches and other devices might have an array of sensors that\n              measure everything from heart rate to blood sugar that can trigger\n              actions.\n            </p>\n\n            <h4 className=\"cbp-heading-4\">Voice</h4>\n            <p className=\"cbp-body\">\n              Smart devices like phones, tablets, and other voice-enabled\n              technology can receive input from users just by them speaking into\n              the device's microphone. This might be as simple as\n              text-to-speech. As complex as spoken commands given via keyword,\n              or for more advanced technologies, artificial intelligence based\n              speech interfaces.\n            </p>\n          </section>\n        </TabPanel>\n\n        <TabPanel>\n          <h2 className=\"cbp-heading-2\">Types of Interaction</h2>\n          <p className=\"cbp-body\">\n            Interactivity in digital products manifests itself in many different\n            ways. Essentially, anything on the page that accepts user input and\n            then reacts, will fall under this category.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Action</h3>\n          <p className=\"cbp-body\">\n            This category of items are verb focused. Delete, submit, copy,\n            remove, sell, buy, etc. Most often this appears as the classic\n            button. When a user interacts with an element of this type the\n            expectation is that the system will begin executing a task after\n            receiving input immediately. The 400ms rule is very important\n            because the user needs to know that their input has been received,\n            so they can confidently move on to the next task at hand. Read more\n            on the Doherty Threshold here.\n            {/* @TODO: insert anchor link here */}\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Calls to Action</h4>\n          <p className=\"cbp-body\">\n            These are special instances of action items. They usually represent\n            the main action on the page and are at the top of the hierarchical\n            food chain. As such, they are usually styled somewhat differently\n            than other like elements on the page, so as to pull extra visual\n            attention to themselves. This might be a \"buy\" button on e-commerce\n            site, a \"submit\" button on a form, or a \"sign-up\" button on a\n            newsletter. When designing your layout, take a moment and think\n            about what the main action on your page is. Can you find the action\n            item very quickly without scanning the entire page? If not, think\n            about how you can adjust your layout to make this more prominent. Be\n            careful not to make it overwhelmingly different.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Confirmation of Action</h4>\n          <p className=\"cbp-body\">\n            Some actions have consequences that are so important that we might\n            want to double check with the user that they are sure they made the\n            right selection. Normally, this is reserved for actions that are\n            destructive in nature. Meaning that once this action is taken, it\n            likely cannot be taken back. Or, in situations where that action\n            might have a significant business impact. Sometimes, this manifests\n            itself as a confirmation modal, or a confirmation page, depending on\n            its complexity.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Forms</h3>\n          <p className=\"cbp-body\">\n            These elements collect information from our users. Form fields allow\n            users to enter custom input because we cannot accurately predict all\n            of the possible entries a user might enter. There may be ways to\n            assist users by making auto-fill suggestions once they begin\n            entering information, such as when they start entering an address.\n            If you have formatting requirements or other restrictions to the\n            content (like character limits) be very explicit in your\n            instructions to the user. All form elements should have a very clear\n            label as to what piece of information it collecting. Home street\n            address and business address can mean very different things. The\n            answers you get are only as good as the questions you ask.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Selection</h3>\n          <p className=\"cbp-body\">\n            These items allow users to make a choice, before selecting an\n            action. Sometimes these allow a user to make a single choice from a\n            grouping like with a radio button or a toggle, or allow your users\n            to build groupings like with check boxes, list items, or tags. There\n            needs to be a clear distinction between which items are currently\n            selected and which are not. Labels and instruction should be clear\n            about what the consequence of the selection is, and what is required\n            before an action is able to be taken, if applicable.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Navigation</h3>\n          <p className=\"cbp-body\">\n            Any well-designed site or application is all about having\n            information organized in a way that makes sense. Navigation is about\n            allowing your users to intuitively move between different pages\n            within your application, and within different elements on those\n            pages.\n          </p>\n          <p className=\"cbp-body\">\n            In an enterprise like CBP there are essentially three levels of\n            navigation:\n          </p>\n          <div className=\"content\">\n            <ul>\n              <li>\n                <span role=\"heading\" aria-level=\"4\">\n                  <strong>Enterprise-wide navigation: </strong>\n                </span>\n                The Universal Header at the top of all of our products, allows\n                our users to move between different applications and sites.\n                Links within page content may also allow users to move between\n                applications where appropriate.\n              </li>\n\n              <li>\n                <span role=\"heading\" aria-level=\"4\">\n                  <strong>Intra-Application navigation: </strong>\n                </span>\n                Located below the Universal Header, the Application Header\n                allows our users to move between different parts of the same\n                application or site. Links featured inside page content may also\n                allow similar navigation, but should not be the primary way to\n                do so.\n              </li>\n\n              <li>\n                <span role=\"heading\" aria-level=\"4\">\n                  <strong>Content navigation: </strong>\n                </span>\n                Moving between pages in a form, hitting the next or previous\n                button on something like a data table, etc. allows our users to\n                move between large sets of connected content within a single\n                page of an application or site.\n              </li>\n            </ul>\n          </div>\n          <p className=\"cbp-subhead-text\">\n            For more information about Navigation, please see its page in the\n            Foundations section <a href=\"navigation\">here.</a>\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Manipulation</h3>\n          <p className=\"cbp-body\">\n            These types of elements allow the user to change what content\n            appears on the page or how it is formatted. It might be something\n            like turning on or off content, like a switch. You might filter the\n            content by making selections on different categories of content to\n            show or hide. Or sorting content by a measure like dates, quantity,\n            or alphabetically. These actions should be non-destructive and allow\n            the user to undo or change their decision. There needs to be\n            sufficient visual cues about what type of manipulation is currently\n            applied, as this will hint to the user they have some ability over\n            how to change it.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Links</h3>\n          <p className=\"cbp-body\">\n            Links allow us to give our users shortcuts to content housed\n            elsewhere. Sometimes these lead somewhere else on the same page\n            (anchor links). Sometimes these lead to other parts of the same site\n            or application. Links that lead to external sites or applications\n            should be demarcated with iconography (specifically the{\" \"}\n            <a href=\"https://fontawesome.com/icons/external-link\">\n              external link icon\n            </a>\n            ) letting the user know we are about to send them somewhere outside\n            of the application or site they are currently in. As well as opening\n            this type of link in a new tab. This will allow our users to have a\n            reference back to where they were without hitting the browser's back\n            button and help keep them from getting lost.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Search</h3>\n          <p className=\"cbp-body\">\n            Search is a complicated matter. It can act as navigation, a\n            filtering mechanism, or as an escape hatch depending on where it is\n            located within the layout. Search should be as flexible as possible,\n            allowing in a wide range of inputs to help users find the\n            information they need without getting stuck on formatting their\n            query. For example, accounting for user input errors like spelling\n            or punctuation variation, looking for synonyms, or not being\n            dogmatic about character formatting of the search input.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Be Flexible (Postel's Law)</h4>\n          <p className=\"cbp-body\">\n            Also known as the Robustness Principle, Postel's law is basically\n            about being flexible and being the least restrictive you can be,\n            without compromising the product. Be liberal in what you accept,\n            conservative in what you send. In terms of search, this means not\n            being so dogmatic about word order, spelling, punctuation, or other\n            formatting so that the user can find what they need instead of a set\n            of results that don't match with their expectations. \"Fuzzy\" search\n            is a good example of this where users can misspell words or enter\n            synonyms to find what they need. Autofill can also assist users with\n            finding what they need and proactively try to eliminate user-error\n            before a search is executed.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Search Placement</h4>\n          <p className=\"cbp-body\">\n            Where the search bar is located is an important cue as to what\n            information is being searched against. Placing the search bar in the\n            application header gives the impression to the user that results\n            will encompass anything on the site or application. Placing it in\n            the content area of the page hints that results will be relegated to\n            that specific pages' content. Placement and visual context let the\n            user have a rough idea of the data set they will be searching\n            against. Think carefully about where you will place your search\n            functionality when crafting your layouts.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Safety Hatch Problem</h4>\n          <p className=\"cbp-body\">\n            It is a common practice to put a search bar in your application\n            header to allow users to \"escape\" when they get lost. If you find\n            that this is being used heavily, using analytics and user testing,\n            you may have an issue with your navigation and information\n            architecture. Obviously, people aren't able to find the pages they\n            need easily. On simple sites and applications with a few pages or\n            less this escape hatch should be entirely unnecessary.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Passive Interaction</h3>\n          <p className=\"cbp-body\">\n            These types of interactions are generally not direct, conscious\n            choices by the user. Normally, it's from something they have set up\n            prior and now through the normal course of business they are sending\n            input to the system. Wearables are a good example of this, where the\n            simple act of walking, exercising, etc. sends data back to a system.\n            Where appropriate, notifications or messaging should be clear about\n            what input was received, and what actions the system is making on\n            their behalf.\n          </p>\n\n          <hr />\n\n          <h2 className=\"cbp-heading-2\">\n            Distinguishing Interactive Elements From the Rest of the Page\n          </h2>\n          <p className=\"cbp-body\">\n            There are many times where the weight of the decision created by\n            clicking a button in one of our systems can have serious\n            consequences. That's why having clear, intuitive design distinctions\n            between elements that are informative, and those that are\n            interactive is so important. A user should be readily able to\n            distinguish which elements on the page are interactive, and what the\n            consequences of those interactions are.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Meaningful Application of Color</h3>\n          <p className=\"cbp-body\">\n            Much like making certain typographical choices, sizing, or other\n            methods of establishing a hierarchical layout, color plays an\n            important role. Especially the consistent application of color.\n            Within the CBP Design System there a small handful of colors that\n            have \"jobs.\" They communicate a specific idea to our users that an\n            element is interactive, what its current state is, or that there is\n            something wrong. Do not mix colors to match brands or create a\n            unique environment just for your app. Just as with any other\n            affordance, these ideas are only easily recalled by our users\n            because they are repeatedly exposed to them in a consistent way. For\n            our CBP enterprise users, the CBP Design System was not created to\n            be \"theme-able.\" We want all of our users to encounter the same set\n            of rules for any app they may visit within the enterprise. The\n            colors have been carefully chosen to meet accessibility standards,\n            to match common understanding, and to allow users to quickly\n            distinguish information. For more information on our color palette\n            visit the <a href=\"colors\">Colors section in Foundations here.</a>\n          </p>\n\n          <h4 className=\"cbp-heading-4\">\n            Using an Overlay of Color on Surfaces\n          </h4>\n          <p className=\"cbp-body\">\n            Certain components are built on top of a surface without another\n            framing device (ie buttons are self contained but drop-down lists\n            are not). Applying a color overlay (a semi-transparent percentage of\n            the color assigned to that particular state) on top of the surface\n            can help reinforce the interaction and what its current state is.\n            Only one of these overlays should be applied at a time. For\n            instance, on an active element only display the hover overlay not\n            the active one (provided it can actually be interacted with again).\n            Overlays should be adjusted percentage wise to maintain\n            accessibility depending on the particular color of the surface being\n            applied to.\n          </p>\n\n          <Image imgName=\"interactivity-colorOverlay.png\" size=\"700px\" />\n          <Image imgName=\"interactivity-colorOverlay2.png\" size=\"700px\" />\n\n          <h3 className=\"cbp-heading-3\">Interactive States</h3>\n          <p className=\"cbp-body\">\n            One aspect unique to interactive elements are that through user\n            interaction the elements physically transform into different states.\n            These states give users hints about what elements they can\n            manipulate and what they can't. As well as what is likely to happen\n            if the complete that transaction. Learn more about states in the\n            <a href=\"#Basics\"> basics section of this page here.</a>\n            {/* @TODO: fix ID routing link */}\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Typographic Treatments</h3>\n          <p className=\"cbp-body\">\n            Changing the color, weight, or styling of text can give users hints\n            about what is interactive. On buttons, we change the font weight to\n            medium as well as style it as All Caps. This is why All Caps should\n            not be used on non-interactive content. For textual links inside\n            large blocks of text, we change the color and underline the text to\n            give users a hint to functionality. For more information about these\n            treatments view this.\n            {/* @TODO: add link here */}\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Adding Iconography</h3>\n          <p className=\"cbp-body\">\n            Iconography can add a good visual anchor to pull a user's attention.\n            This can be useful in establishing uniqueness. To learn more about\n            Iconography,{\" \"}\n            <a href=\"../iconography\">see its Foundations page here.</a>\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Skeuomorphism</h3>\n          <p className=\"cbp-body\">\n            Skeuomorphism is the bridge from the digital world and the physical\n            world. When we apply this concept to interactive elements we attach\n            meaning by styling an element like a similar, real-world object.\n            Buttons that look and behave like a physical button you might find\n            on a piece of electronics, dials that look like a knob you might see\n            on a radio, or all of the iconographic choices we can make which\n            give hints to functionality.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Cursor Changes</h3>\n          <p className=\"cbp-body\">\n            On traditional mouse and keyboard devices, changing the display of\n            the cursor when you're near or interacting with an element gives\n            your users hints as to what is or is about to happen. Naturally with\n            touch devices these will not appear.\n          </p>\n          <p className=\"cbp-body\">\n            You can set what cursor type you want the user to see when you\n            change the cursor CSS property (hover over the title of each bullet\n            point to see the corresponding cursor):\n          </p>\n          <div className=\"content\">\n            <ul>\n              <li>\n                <span role=\"heading\" aria-level=\"4\" style={{ cursor: \"help\" }}>\n                  <strong>Help: </strong>\n                </span>{\" \"}\n                You would use this when you are hovering over an element which\n                leads to help content, like hints.\n              </li>\n\n              <li>\n                <span role=\"heading\" aria-level=\"4\" style={{ cursor: \"wait\" }}>\n                  <strong>Wait: </strong>\n                </span>{\" \"}\n                You would use this when an element is unable to be interacted\n                with because it is still processing a previous task.\n              </li>\n\n              <li>\n                <span\n                  role=\"heading\"\n                  aria-level=\"4\"\n                  style={{ cursor: \"crosshair\" }}\n                >\n                  <strong>Crosshair: </strong>\n                </span>{\" \"}\n                You would use this when the system is allowing you to make a\n                selection via a polygon.\n              </li>\n\n              <li>\n                <span\n                  role=\"heading\"\n                  aria-level=\"4\"\n                  style={{ cursor: \"zoom-in\" }}\n                >\n                  <strong>Zoom-In: </strong>\n                </span>{\" \"}\n                You would use this when the UI is allowing the user to zoom-in,\n                such as with a map.\n              </li>\n\n              <li>\n                <span\n                  role=\"heading\"\n                  aria-level=\"4\"\n                  style={{ cursor: \"zoom-out\" }}\n                >\n                  <strong>Zoom-Out: </strong>\n                </span>{\" \"}\n                You would use this when the UI is allowing the user to zoom-out,\n                such as with a map.\n              </li>\n\n              <li>\n                <span role=\"heading\" aria-level=\"4\" style={{ cursor: \"grab\" }}>\n                  <strong>Grab: </strong>\n                </span>{\" \"}\n                You would use this when the user's cursor is hovering over an\n                object which can be moved as part of a drag and drop scenario.\n              </li>\n\n              <li>\n                <span\n                  role=\"heading\"\n                  aria-level=\"4\"\n                  style={{ cursor: \"grabbing\" }}\n                >\n                  <strong>Grabbing: </strong>\n                </span>{\" \"}\n                You would use this when the user's cursor has clicked and held\n                an object which can be moved as part of a drag and drop\n                scenario.\n              </li>\n\n              <li>\n                <span\n                  role=\"heading\"\n                  aria-level=\"4\"\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <strong>Pointer: </strong>\n                </span>{\" \"}\n                You would use this when the user's cursor is hovering over an\n                interactive element.\n              </li>\n\n              <li>\n                <span role=\"heading\" aria-level=\"4\" style={{ cursor: \"text\" }}>\n                  <strong>Text: </strong>\n                </span>{\" \"}\n                You would use this when the user's cursor is inside of a text\n                field.\n              </li>\n\n              <li>\n                <span\n                  role=\"heading\"\n                  aria-level=\"4\"\n                  style={{ cursor: \"not-allowed\" }}\n                >\n                  <strong>Not Allowed: </strong>\n                </span>{\" \"}\n                You would use this when the user's cursor is over an interactive\n                element which currently in the disabled state. NOT in an off\n                state.\n              </li>\n\n              <li>\n                <span\n                  role=\"heading\"\n                  aria-level=\"4\"\n                  style={{ cursor: \"col-resize\" }}\n                >\n                  <strong>Column Resize: </strong>\n                </span>{\" \"}\n                You would use this when the user's cursor is hovering over a\n                vertical boundary which can have its width adjusted.\n              </li>\n\n              <li>\n                <span\n                  role=\"heading\"\n                  aria-level=\"4\"\n                  style={{ cursor: \"row-resize\" }}\n                >\n                  <strong>Row Resize: </strong>\n                </span>{\" \"}\n                You would use this when the user's cursor is hovering over a\n                horizontal boundary which can have its height adjusted.\n              </li>\n            </ul>\n          </div>\n          <p className=\"cbp-subhead-text\">\n            Read more about cursor change implementation here:{\" \"}\n            <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\">\n              https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\n            </a>\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Animation and Behavior</h3>\n          <p className=\"cbp-body\">\n            Movement has the ability to give quick and informative feedback to\n            our users as they interact with our products. With interactive\n            elements this can simply be the transition that happens between\n            state changes, or more complex to describe the importance or nature\n            of the action being taken. A little goes a long way here. The\n            purpose is to give visual feedback to the user that the system has\n            received their input, not to decorate or entertain. To learn more\n            about Motion and Animation, visit its page in Foundations here\n          </p>\n          {/* @TODO: add link here */}\n\n          <h3 className=\"cbp-heading-3\">Sound and Haptics</h3>\n          <p className=\"cbp-body\">\n            On devices that rely on touch or other non-traditional inputs, we\n            need to give other sensory cues to our users. There's no cursor to\n            give us a hint what we're selecting and often on touch devices our\n            fingers are obscuring the view of the object we're trying to touch.\n            How do we give appropriate feedback to our users that the system has\n            accepted their input? Using sounds and vibrations (referred to as\n            haptics) we can make sure that the system is giving timely feedback\n            in this kind of environment. These attributes are still subject to\n            standardized formatting, making sure we are giving a consistent\n            experience. Actions that are positive or neutral in nature have a\n            certain tone and vibration that is distinct from an action that\n            might be destructive in nature like delete. While haptics may be\n            only available on a select number of devices, UI sounds are\n            generally applicable on all devices, provided it has a speaker. To\n            learn more about UI Sounds and Haptics, view the section of\n            Foundations here.\n            {/* @TODO: add link here */}\n          </p>\n\n          <hr />\n\n          <h2 className=\"cbp-heading-2\">Maintaining Interactive Hierarchy</h2>\n          <p className=\"cbp-body\">\n            Not all interactions are equal. Different interactive elements on\n            the page may be parts of groups which you will want to treat\n            similarly. Others, may play larger or smaller roles in the overall\n            function of the page. These will need different types of treatments\n            to give the user cues about what level of importance an item has,\n            and what content it is connected to.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Proximity, Grouping, and Placement</h3>\n          <p className=\"cbp-body\">\n            The way we style Interactive elements, where we place them, and\n            other visual cues, let our users know what these elements can do and\n            how they affect content on the page.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">\n            Items that Share a Common Boundary are Associated Together- Gestalt\n            Law of Common Region\n          </h4>\n\n          <Image imgName=\"interactivity-gestaltCommonRegion.png\" />\n\n          <p className=\"cbp-body\">\n            Elements that share a common boundary or enclosure are usually\n            associated together. For example toggles share a border as a\n            boundary and therefore are perceived to be connected in purpose.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">\n            Items that are Close Together are Asociated Together- Gestalt Law of\n            Proximity\n          </h4>\n          <p className=\"cbp-body\">\n            Items that are close to each other are perceived to be a group and\n            have some degree of connectedness. If you have two groups of cards\n            and have a larger space between the groups than between the cards\n            themselves, the mind will perceive two groupings even if all of the\n            cards are visually similar.\n          </p>\n          <p className=\"cbp-body\">\n            When it comes to building connection to a piece of content on the\n            page, how far or close the element is makes or breaks that\n            relationship. Putting the previous or next page controls for a data\n            table completely separate from the data table doesn't make much\n            sense.\n          </p>\n          <Image imgName=\"interactivity-gestaltProximity.png\" />\n\n          <h4 className=\"cbp-heading-4\">\n            Items that Look or Behave the Same are Associated Together - Gestalt\n            Law of Similarity\n          </h4>\n          <p className=\"cbp-body\">\n            People have a tendency to view elements with similar characteristics\n            like color, shape, size, orientation, and behavior as related. A row\n            of similarly styled buttons would indicate that a user is being\n            given a choice of a set of actions to take. And that each of these\n            decisions is related to the same issue.\n          </p>\n\n          <Image imgName=\"interactivity-gestaltSimilarity.png\" />\n\n          <h4 className=\"cbp-heading-4\">\n            Items that are Aligned Together are Associated Together - Gestalt\n            Law of Continuation\n          </h4>\n          <p className=\"cbp-body\">\n            Alignment matters. Items arranged in a continual line, either\n            straight or curved, will be associated together. People's eyes tend\n            to follow paths until they are interrupted.\n          </p>\n          <Image imgName=\"interactivity-gestaltContinuation.png\" />\n\n          <h4 className=\"cbp-heading-4\">\n            Elements that Move in the Same Direction are Associated Together -\n            Gestalt Law of Common Fate\n          </h4>\n          <p className=\"cbp-body\">\n            Elements that move in the same direction are perceived as more\n            related than objects that remain stationary or move in other\n            directions. The behaviors we attach to state or animations that we\n            create respond to user input can breed other types of\n            interconnectivity depending on the direction of that movement. The\n            drawer component is a good example of this. All of the content\n            placed into the drawer moves together as it is opened and closed.\n            This helps reinforce that this collection of information is related\n            to each other.\n          </p>\n          <Image imgName=\"interactivity-gestaltCommonFate.png\" />\n\n          <h4 className=\"cbp-heading-4\">\n            Items that are Parallel to Each Other are Associated Together -\n            Parallelism\n          </h4>\n          <p className=\"cbp-body\">\n            Elements that are parallel to each other are perceived as related.\n            If you align stack a few buttons on top of each other vertically,\n            that collection of buttons will be viewed as a grouping. This is a\n            bit of a combination of proximity and a few other concepts, but that\n            alignment adds another layer of reinforcement.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">\n            Items that are Connected are Associated Together - Law of Uniform\n            Connectedness\n          </h4>\n          <p className=\"cbp-body\">\n            Elements that are connected are going to have a stronger degree of\n            connection than elements that are not. This principle seems to\n            transcend others. Where two objects may be styled differently,\n            behave differently, or have different content drawing a physical\n            connection between these objects automatically creates a\n            relationship in our minds. A good example of this might be a link\n            analysis visualization where different nodes are connected with\n            lines. Each node is different, but that simple line creates a\n            relationship. Even altering the styling of that line can change the\n            nature of the relationship. Be wary of connecting content that is\n            not related with visual devices.\n          </p>\n          <Image\n            imgName=\"interactivity-gestaltConnectedness.png\"\n            size=\"300px\"\n          />\n\n          <h4 className=\"cbp-heading-4\">\n            The Eye is Drawn to Points of Contrast - Focal Points\n          </h4>\n          <p className=\"cbp-body\">\n            Our eyes are naturally drawn to points of contrast. What is\n            different in a group of things that look the same? Where do things\n            intersect to create a point of visual tension? This is where you\n            will want to associate a \"call to action\" or other important\n            element. Elements you add contrast to will sit at the very top of\n            your visual hierarchy next to elements you add motion to.\n          </p>\n          <Image imgName=\"interactivity-gestaltFocalPoints.png\" />\n\n          <h4 className=\"cbp-heading-4\">\n            Size and Placement Affect Productivity- Fitts' Law\n          </h4>\n          <p className=\"cbp-body\">\n            The speed at which users can make selections directly affects\n            productivity. Fitt's law tries to quantify how size and distance\n            affect this measure of productivity. There are two main aspects to\n            this concept.\n          </p>\n          <div className=\"content\">\n            <ul>\n              <li>\n                The larger the size of an interactive element, the less likely\n                users will encounter an error by making the correct selection on\n                the first try. Smaller surface areas require a greater level of\n                dexterity and control. This obviously has a point of diminishing\n                returns where increasing the object's size no longer produces\n                any gains in productivity.\n              </li>\n              <Image imgName=\"interactivity-fittsLaw.jpg\" />\n              <li>\n                The shorter the distance between a user's task/attention area\n                and the corresponding task-related interactive element the less\n                time it takes for the user to realize they are connected and\n                that there are options available for them to consider. For\n                example, putting a previous/next page control for data table in\n                a completely different area than the table just doesn't make\n                sense. Drop down menus for instance, should only be used under\n                certain circumstances because they increase the distance the\n                user has to travel between where they first interacted with the\n                element and the subsequent selection.\n              </li>\n              <Image imgName=\"interactivity-fittsLaw2.jpg\" />\n              <li>\n                <strong>Time</strong> is the amount of time required to complete\n                the movement.\n              </li>\n              <li>\n                <strong>A and B</strong> are empirically determined regression\n                coefficients, which is basically a fancy way of stating they are\n                values gained from direct observation that build a slope.\n              </li>\n              <li>\n                <strong>Distance</strong> is a measurement from the starting\n                point to the end point (target object).\n              </li>\n              <li>\n                <strong>Width</strong> is the width of the target object.\n              </li>\n            </ul>\n          </div>\n\n          <h3 className=\"cbp-heading-3\">Touch Targets</h3>\n          <p className=\"cbp-body\">\n            Touch targets are the active area on an interactive element. The\n            physical dimensions of what is clickable or tappable. Touch targets\n            should be large enough for users to both discern what it is and to\n            accurately select them. Our goal is at least 48px x 48px in size.\n          </p>\n          <p className=\"cbp-body\">\n            Touch targets should have ample spacing between each other. This can\n            prevent accidental choices from being made, which slow down\n            productivity and may be destructive in nature (as selecting delete\n            by accident). The minimum spacing is 8px between touch targets but\n            should increase based on relative sizing of the interactive\n            elements. The bigger the elements, the more space should be applied\n            between them.\n          </p>\n          <p className=\"cbp-body\">\n            Touch targets should be preferably be placed in areas of an\n            interface that allows them to be easily acquired.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Fitt's Index of Performance</h3>\n          <p className=\"cbp-body\">\n            Fitt's Index is about the relationship with the physical interaction\n            with a device, and the physical exertion taken on the human\n            skeletal-muscular system by completing that interaction. If you are\n            using a desktop system this might refer to the fatigue sustained by\n            having to swing wildly back and forth to different areas of the\n            screen, needing to know lots of hotkey commands, or other repetitive\n            movements. With mobile this might refer to having the thumb often\n            stretching to the top of the screen, which can be difficult when\n            handling a device in a single hand. The most extreme example might\n            be wall-mounted touch-screens, as pretty much all interaction with\n            them can become tiring very quickly. The converse of this is making\n            one-way or destructive interactions more difficult, so that they are\n            not done accidentally. For example, turning off the mobile device by\n            first having to hold the power button down then a sliding button to\n            turn off completely. This keeps the user from accidentally\n            completing this action.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">\n            Alignment Based on Device Viewport Constraints\n          </h4>\n          <p className=\"cbp-body\">\n            Corners are the easiest places for the user to reach because they\n            have \"infinite edges.\" The cursor automatically aligns or the user's\n            touch is limited by the physical dimensions of the device. Either\n            way, the edge is always easier to find.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Von Restorff Effect</h3>\n          <p className=\"cbp-body\">\n            The Von Restorff effect (also known as the isolation effect)\n            predicts that when multiple similar objects are present, the one\n            that differs from the rest is most likely to be remembered. If you\n            have an important action on the page such as a submit on a form, it\n            should be distinctive enough visually to let your user know that\n            it’s more important.\n          </p>\n          <Image imgName=\"interactivity-vonRestorff.png\" />\n\n          <h3 className=\"cbp-heading-3\">Serial Position Effect</h3>\n          <p className=\"cbp-body\">\n            The Serial Position Effect is the propensity of a user to best\n            remember the first and last items in a series. When it comes to\n            short term memory, the first few items you see don't have little\n            cognitive load on your user because they haven't seen any other part\n            of the list yet. As your user goes through the list and gets to the\n            end though, because the last few items are in your recent memory\n            they also put less cognitive load on your user. Unfortunately the\n            stuff in the middle suffers, and more so as lists get longer. As\n            such, important information should be emphasized on the ends of the\n            lists.\n          </p>\n          <Image imgName=\"interactivity-serialPosition.png\" size=\"700px\" />\n\n          <hr />\n\n          <h2 className=\"cbp-heading-2\">Cognitive Load</h2>\n          <p className=\"cbp-body\">\n            Cognitive load refers to the total amount of mental effort being\n            used in a person’s working memory. To put it simply, it is the\n            amount of thought you need to exercise in order to complete a\n            specific task. Basically this is the human brain's equivalent to\n            RAM.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Intristic Cognitive Load</h3>\n          <p className=\"cbp-body\">\n            Intrinsic cognitive load is how much of your mental capacity is\n            required to process a new piece of information. Does this label make\n            sense? Is this error message explaining what is actually wrong so I\n            can fix it? Basically how much energy is consumed trying to\n            understand what the user is supposed to do. This is why short,\n            simple copy (micro copy) is so important and can be very effective\n            at reducing cognitive load provided it gives all necessary\n            instruction.\n          </p>\n          <p className=\"cbp-body\">\n            The more times a user is exposed to a piece of instruction the less\n            cognitive load is required for them to understand it. This is why so\n            many times we find users get used to bad experiences. Familiarity is\n            often confused with success. This is also why users may be hesitant\n            to change. It took them so long to get used to the first crappy\n            experience they don't want to repeat it.\n          </p>\n          <Image imgName=\"interactivity-intristicCogLoad.png\" size=\"700px\" />\n\n          <h3 className=\"cbp-heading-3\">Extraneous Cognitive Load</h3>\n          <p className=\"cbp-body\">\n            Extraneous cognitive load is directly related to how the information\n            is designed, because it takes up mental space doesn't necessarily\n            help users understand the content. Does the information have good\n            hierarchy? Is it aesthetically pleasing? Does the way it is\n            presented reinforce what the user is supposed to do, or does it get\n            in the way? Good design can reduce overall cognitive load. The goal\n            here is to simply make sure that design doesn't add unnecessary load\n            to the user. The best you can do here is not add to the problem.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Aesthetic Usability Effect</h4>\n          <p className=\"cbp-body\">\n            Aesthetically pleasing designs can make minor usability issues more\n            tolerable. They can mask these usability issues on early visits, but\n            after each subsequent visit these issues become more and more\n            apparent. This can complicate user testing in that a pretty site\n            might only garner feedback in relation to the way it looks and not\n            how it functions. Which is why it is important to continue doing\n            research over time so this effect can wear off. A site can be\n            pretty, but after struggling enough times to find what you need,\n            that feedback will rise to the top.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Germane Cognitive Load</h3>\n          <p className=\"cbp-body\">\n            Humans are, at our core, pattern-recognition machines. Germane\n            cognitive load is the amount of mental capacity devoted to\n            understanding patterns in information architecture. Why are these\n            items grouped together? How much time do I devote to knowing where\n            in the hierarchy of the site I currently am, and how do I navigate\n            to this other area of the site? Just like with intrinsic load, this\n            wanes over time with repeated exposure. You should be careful about\n            making significant changes to the navigation and organization of an\n            application as it can increase the cognitive load of the user before\n            they become accustomed to the new pattern.\n          </p>\n\n          <hr />\n\n          <h2 className=\"cbp-heading-2\">\n            Designing for Limited Mental Bandwidth\n          </h2>\n\n          <h3 className=\"cbp-heading-3\">Recognition vs. Recall</h3>\n          <p className=\"cbp-body\">\n            Recognition is preferable because it involves more cues than recall\n            for the user to understand the meaning of a piece of information or\n            action. This helps reduce cognitive load on our users becuase they\n            intuitively know what is expected of them. This is why mulitple\n            choice drop downs can be more effective than an open text field. The\n            user doesn't have to search their memory for the answer, but instead\n            recognizes the correct choice quickly from a list of possible\n            selections.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Miller's Law</h4>\n          <p className=\"cbp-body\">\n            Miller's Law states that the average person can only keep 7 items\n            (+/-2) in their working memory. One way we can increase the\n            effectiveness of our own brains is by chunking or categorizing\n            information by likeness.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Following Existing Mental Models</h3>\n          <p className=\"cbp-body\">\n            Your digital product is very likely not the first one your user has\n            encountered. Over time, with exposure to other digital products,\n            users form perceptions about how certain types of interactions are\n            supposed to work. For the most part a lot of expectations users have\n            will be shared with the general population, but in the end every\n            person possesses their own set of mental models. As an enterprise\n            this presents us with a unique opportunity to mold the expectations\n            of our users. We can choose to adopt these existing mental models to\n            a degree and use them to our advantage. Or, we can choose to buck\n            the trend to make something unique. There is a price to pay either\n            way.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Existing Mental Models</h4>\n          <p className=\"cbp-body\">\n            When following existing mental models you need to keep mind just\n            because something is popular (prominently featured across the\n            general web) does not necessarily mean that is appropriate for your\n            purposes or that it is indeed the best decision. People get used to\n            bad UI all the time. Don't let familiarity necessarily equate to\n            superiority. There's really no such thing as a universal experience\n            on the web but certain best practices are widely accepted. That's\n            why it is so important to have a consistent experience across the\n            CBP enterprise. We can build upon existing best practices and\n            reinforce our UX choices by repeated exposure to our products. This\n            allows us to reduce cognitive load on our users by letting them\n            focus on doing their jobs and not waste time learning new mental\n            models, except where necessary.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Jakob's Law (Nielsen)</h4>\n          <p className=\"cbp-body\">\n            Users spend most of their time on other sites. This means that users\n            prefer your site to work the same way as all the other sites they\n            already know. Typically we refer to these common experiences as\n            affordances. Users will come to your product expecting similar\n            functionality they have encountered before.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Crafting New Mental Models</h4>\n          <p className=\"cbp-body\">\n            When creating an interaction unique to your experience, sometimes\n            the change you make is quite intuitive. Sometimes, in a user's first\n            few exposures to this pattern, they may not make an immediate\n            connection to what is expected from them. In these cases, you pay a\n            cost of added cognitive load in making these changes.\n          </p>\n          <p className=\"cbp-body\">\n            User testing can be an effective way to know if the change you are\n            making is both effective, and intuitive. It is encouraged to do\n            testing like A/B testing between the previous iteration of the UI\n            and the new, proposed UI to see if users get confused, lost, or make\n            errors based on these changes versus the old user interface.\n          </p>\n          <p className=\"cbp-body\">\n            Another way to manage added cognitive load when changing a\n            particular feature is to allow your users to continue to access that\n            familiar version while they become accustomed to the new way of\n            doing things. For example, you have a page that is heavily laid out\n            in large data tables but you are moving towards a card based layout.\n            It may be helpful to maintain these two view simultaneously for a\n            while. Then get rid of the table view provided it wasn't essential\n            and the new view is successful.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">The Doherty Threshold</h3>\n          <p className=\"cbp-body\">\n            To increase user productivity, the system should provide some form\n            of feedback to the user within 400ms of user interaction. In the\n            event of an action taking too long to respond, use perceived\n            performance to reduce the perception of a lag if the system taking\n            too long to respond. (learn more about perceived performance in the\n            Communications section of foundations here).\n            {/* @TODO: insert link here */}\n          </p>\n          <div className=\"content\">\n            <ul>\n              <li>\n                <span role=\"heading\" aria-level=\"4\">\n                  <strong>User Response Time:</strong>\n                </span>{\" \"}\n                The time a user is required to think between the user receiving\n                a complete response to an command and the time the user can\n                enter the next command.\n              </li>\n\n              <li>\n                <span role=\"heading\" aria-level=\"4\">\n                  <strong>System Response Time:</strong>\n                </span>{\" \"}\n                The time between a user giving the system a command and when the\n                system is able to display a complete response.\n              </li>\n              <figure>\n                <Image\n                  imgName=\"interactivity-dohertyThreshold.png\"\n                  size=\"700px\"\n                />\n                <figcaption>\n                  © Copyright IBM Corporation 1982, 1997. All rights reserved.\n                </figcaption>\n              </figure>\n            </ul>\n          </div>\n\n          <h3 className=\"cbp-heading-3\">Hick's Law</h3>\n          <p className=\"cbp-body\">\n            The cognitive load it takes to make a decision increases with the\n            number and complexity of choices. With well thought out information\n            architecture and limiting the amount of options to what is necessary\n            we can speed up the time it takes our users to come to a decision\n            point and increase productivity.\n          </p>\n          <Image imgName=\"interactivity-hicksLaw.png\" size=\"700px\" />\n\n          <h4 className=\"cbp-heading-4\">When to Apply</h4>\n          <p className=\"cbp-body\">\n            It is important to apply Hick's Law in a fashion that is relevant to\n            the situation the user is presently in. With user workflows the\n            inverted pyramid comes into play. At the highest level, information\n            is kept to the minimum needed for the user to make a choice about\n            where to delve more deeply. As they move down the funnel,\n            information gets more specific and options for actions increase. The\n            quicker a user needs to make a decision, the fewer choices you\n            should be giving to your user. The more deliberation needed before\n            taking an action, the less Hick's law applies. Though there is still\n            always the possibility of choice fatigue.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Helpful Tips in Reducing Complexity</h4>\n          <div className=\"content\">\n            <ul>\n              <li>\n                Try simplifying choices for complex tasks by obscuring its\n                complexity into smaller steps. Form wizards are a good example\n                of this. Respect your user's time. It is money after all.\n              </li>\n\n              <li>\n                Use progressive loading to minimize cognitive load for new\n                users. Reducing the number of perceived options can help your\n                user process lots of options in an efficient manner. Shopping\n                results or photo galleries are good examples of this.\n              </li>\n\n              <li>\n                Sometimes separating or placing the most likely choices first\n                can help your users make decisions. Make sure that you are not\n                introducing bias into the system by simply by changing an\n                option's serial position. Navigation is also a good example of\n                this. Names for collections of pages and sub pages selectable\n                through submenus.\n              </li>\n\n              <li>\n                When your user is under pressure to make quick decisions they\n                often get \"tunnel vision.\" Keep choices to a minimum when\n                response time is critical as it speeds up the time used to make\n                decisions. It's also more likely with fewer options that your\n                user will be able to accomplish their goal and not get lost.\n                People tend to like working on older cars not just because\n                they're attractive looking, but because they're easier to work\n                on. Less moving parts, easier to fix.\n              </li>\n\n              <li>\n                Take care not to oversimplify. A user that can't find the\n                appropriate option can get frustrated and give up, or make the\n                wrong decision because the more appropriate one wasn't present.\n              </li>\n\n              <li>\n                Having too many options with the same perceived hierarchy can\n                lead to poor user experience too. Too many options? Maybe it's\n                time for a card-sorting exercise to reevaluate whether your\n                categories are efficient. Use \"Occam's Razor\" as a guiding\n                principle here. \"The simplest solution is usually the best.\"\n              </li>\n\n              <li>\n                In some instances anticipatory design might provide the user\n                with a quick way to make a decision. Type aheads in search\n                fields are a great example of this. Machine learning can help\n                identify patterns and present a likely candidate for user to\n                choose. This should not be applied to actions where the decision\n                can have dire consequences so as to not introduce unwanted bias\n                into that kind of decision-making process.\n              </li>\n            </ul>\n            <Image imgName=\"interactivity-reduceComplexity.png\" size=\"700px\" />\n          </div>\n\n          <h3 className=\"cbp-heading-3\">Tessler's Law</h3>\n          <p className=\"cbp-body\">\n            In direct opposition to Hick's Law, <strong>Tessler's Law</strong>{\" \"}\n            (also known as the Law of Conservation of Complexity) states that\n            there is a certain amount of complexity in a system which cannot be\n            reduced. At CBP, most of the systems we build are data rich, dense\n            UIs that have very robust capabilities. We need to make sure that\n            during the process of abstraction into the simplest terms, we don't\n            oversimplify the solution to the point we lose functionality or\n            distract from the business purpose for which the system was built.\n          </p>\n          <p className=\"cbp-body\">\n            The main choice here is, do we put that choice on our users via\n            controls, or do we have the system handle that complexity on behalf\n            of the user. With user input, the choices we make about handling\n            complexity are mostly about how its presented, what instruction is\n            present, and the resulting behavior. When the system handles the\n            complexity on behalf of the user, there are a lot of assumptions\n            that come into play, hidden controls, etc that can become\n            problematic very easily for our users to properly understand or\n            follow.\n          </p>\n\n          <h3 className=\"cbp-heading-3\">Zeigarnik Effect</h3>\n          <p className=\"cbp-body\">\n            The Zeigarnik Effect is where users are more able to recall actions\n            that are incomplete, rather than complete. The brain tends to fixate\n            on tasks left incomplete so you can use this to your advantage in\n            long forms by using visual cues to reinforce steps or percentage\n            complete.\n          </p>\n          <Image imgName=\"interactivity-zeigarnikEffect.jpg\" size=\"700px\" />\n\n          <hr />\n\n          <h2 className=\"cbp-heading-2\">\n            Category Size and Typicality Effects\n          </h2>\n          <p className=\"cbp-body\">\n            The <strong>Category Size Effect</strong> says that people respond\n            faster when the item is a member of a smaller, more specific\n            category (eagle is a bird vs eagle is an animal). And the{\" \"}\n            <strong>Typicality Effect</strong> says that people are faster to\n            respond to usual or typical members. For example, when asked to name\n            a bird an individual is much more likely to respond with robin\n            instead of penguin.\n          </p>\n          <Image imgName=\"interactivity-categorySize.jpg\" size=\"700px\" />\n\n          <hr />\n\n          <h2 className=\"cbp-heading-2\">Accessibility Concerns</h2>\n\n          <h3 className=\"cbp-heading-3\">Focus and Activation Issues</h3>\n\n          <h4 className=\"cbp-heading-4\">Tab Order</h4>\n          <p className=\"cbp-body\">\n            Interactive elements on the page are selected by users who use\n            assistive technology through the focus state. Some users will use\n            the \"Tab\" key on their keyboard or another technology to \"tab\"\n            through these interactive elements. This sequence of moving from one\n            interactive element to another must follow logical reading order.\n            Normally this means the top-down, left-right reading order should be\n            followed, but in general this refers to the reading order of the\n            content on the page by hierarchical standards. Some mobile-optimized\n            applications may utilize a bottom navigation which would put it\n            above any content on the page in reading order despite being\n            physically below said content. Use your best judgement and imagine\n            the order in which you intend your user to interact with this\n            content. That should define your reading order. Unfortunately due to\n            the subjectivity of this criteria it can never be fully automated.\n            Try and order your elements in the DOM to match tab order, rather\n            than using the \"tabindex\" attribute to force elements around as this\n            makes your code increasingly fragile.\n          </p>\n          <div className=\"content\">\n            <ol>\n              <li>\n                Focusable components need to receive focus in an order that\n                preserves meaning and operability only when navigation sequences\n                affect meaning and operability.\n              </li>\n\n              <li>\n                In those cases where it is required, there may be more than one\n                order that will preserve meaning and operability.\n              </li>\n\n              <li>\n                If there is more than one order that preserves meaning and\n                operability, only one of them needs to be provided.\n              </li>\n            </ol>\n          </div>\n\n          <h4 className=\"cbp-heading-4\">Reveal on Hover</h4>\n          <p className=\"cbp-body\">\n            Revealing new content or features upon hovering presents several\n            accessibility issues.\n          </p>\n          <div className=\"content\">\n            <ol>\n              <li>\n                The user may not have intended to trigger that interaction.\n              </li>\n\n              <li>The user may not be aware new content has appeared.</li>\n\n              <li>\n                The new content may interfere with the user's ability to perform\n                a task.\n              </li>\n\n              <li>\n                The new content or functionality may be unavailable to users on\n                other types of devices who may not accept hover as a possible\n                state of being.\n              </li>\n            </ol>\n          </div>\n          <p className=\"cbp-body\">\n            In order to mitigate these issues, this content or functionality\n            must be dismissible, hoverable, and persistent. But really it's just\n            easier to make it accessible by another means of interaction like an\n            icon which opens/closes with a click/tap.\n          </p>\n          <p className=\"cbp-body\">\n            All of these concerns apply equally to the focus state.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Keyboard (Focus) Trap</h4>\n          <p className=\"cbp-body\">\n            Focus traps are common development errors where a keyboard user is\n            tabbing through content and encounters a grouping of elements which,\n            instead of allowing the user to move down the tab order correctly,\n            send the user's focus around in circles (a trap). This functionally\n            kills all usability for that user on this page. The usual culprit\n            here is a plugin or other embedded content.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Skip Links</h4>\n          <p className=\"cbp-body\">\n            It is common practice for web-based digital products to have a \"skip\n            link\" as the very first element in the page. This allow users to\n            skip repetitive content like navigation and go straight to the main\n            content part of the page. Usually the first tab a user activates\n            focuses on this \"hidden\" control. Skip links are usually hidden\n            until focused. If the user selects the link, focus will be moved to\n            the main content area of the page. If they move focus beyond the\n            skip link, assistive technology will begin with the first element on\n            the page (most likely navigation). This should always be the first\n            item in your tab order.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Hover/Focus States</h4>\n          <p className=\"cbp-body\">\n            All interactive elements should have a treatment consistent with the\n            CBP Design System to visually identify its appearance during a hover\n            or focus state (they should appear identically).\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Flexible Input</h4>\n          <p className=\"cbp-body\">\n            In instances where interaction is based on clicking and holding an\n            element then moving it (drag and drop) or gestures that involve\n            tapping and moving your fingers across a screen, the input the\n            system receives should be flexible. Some users will have a hard time\n            drawing a straight line when using a component like a slider. If\n            they go a little vertical the system should still respond according\n            to the general direction of input. Pinch to zoom shouldn't matter in\n            what direction your fingers are going as long as they are going\n            closer or farther from each other.\n          </p>\n          <p className=\"cbp-body\">\n            Users may also inadvertently click or tap elements so we need a way\n            to cancel these actions. The most common way to do so is to not\n            accept that input until the \"up event\" is accepted. For example, if\n            you tap a button by accident and while your finger is still pressed\n            you move your finger off the button target area. Upon lifting your\n            finger the action is not taken.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Touch Target Size</h4>\n          <p className=\"cbp-body\">\n            All interactive elements should have a touch target area of at least\n            48px by 48px. The WCAG standard is 44px but the well-documented\n            Google rationale for 48px is more compelling. Plus, this exceeds the\n            required standard.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">\n            Consistent and Predictable Interactions\n          </h4>\n          <p className=\"cbp-body\">\n            Similar interactive elements should behave similarly. Buttons should\n            behave in a cohesive way no matter what part of the product you are\n            in, same as text input fields, or any other element. There should be\n            sufficient cues to the user when they should expect a common UI\n            element will not behave in a way that is familiar. For example\n            hitting the back button on a form may trigger a warning dialogue\n            modal that tells the user they may lose unsaved work.\n          </p>\n          <p className=\"cbp-body\">\n            Interactive elements that have identical functionality should have\n            the same accessible name. Having two text fields that are addresses\n            but with completely different names would be confusing and add\n            cognitive load to your users.\n          </p>\n\n          {/* @TODO: Insert Success Criterion stuff here if required */}\n\n          <h3 className=\"cbp-heading-3\">Interactive Element Styling Issues</h3>\n          <p className=\"cbp-body\">\n            Using only color, shape, size, visual location, orientation, or\n            sound to provide the sole means of understanding and operating\n            content on your page is problematic as it can either alienate those\n            with a visual acuity disorder (color, shape, size, location,\n            orientation) or those with a hearing disorder (sounds). Think about\n            how to incorporate cues that might close the gap so that each type\n            of user can understand your content. Giving instruction to your user\n            that \"fields labeled in red are required\" would not be sufficient\n            without also giving another means of indicating the field is\n            required like adding a symbol, changing text styles, or labeling\n            each individual field with the word required.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Sensory Instruction</h4>\n          <p className=\"cbp-body\">\n            In your instruction to users, do not rely on wording that would only\n            apply to users with full use of a particular sense such as sight or\n            hearing. All of the above can be tricky thing for someone who is\n            blind. Try to be more precise with your language or give alternative\n            instruction that might be picked up by assistive technology to\n            explain what you mean in a way your users can understand.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Minimum Contrast</h4>\n          <p className=\"cbp-body\">\n            Just as with any element on the page that conveys information to\n            your users (text, iconography) you should be meeting or exceeding\n            the minimum contrast ratios of 4.5:1.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Images as Controls</h4>\n          <p className=\"cbp-body\">\n            You should try to avoid using images of buttons over using a\n            semantically coded one, it complicates matters more than it's worth\n            to have a specific styling.\n          </p>\n          {/* @TODO: Insert Success Criterion stuff here if required */}\n\n          <h3 className=\"cbp-heading-3\">Input Purpose Issues</h3>\n\n          <h4 className=\"cbp-heading-4\">Relevant Instruction</h4>\n          <p className=\"cbp-body\">\n            Input fields need an appropriate level of instruction so that the\n            user can readily identify what the intended purpose of the field is.\n            Visible labels and appropriate instruction help us understand the\n            function of different input fields. Programmatically identifying the\n            input type by category for example, input type=\"tel\", input\n            type=\"email\", or input type=\"password\" can help give users with\n            assistive technology cues to an input's purpose or intended format\n            when paired with a robust label and instruction. Where inputs have a\n            label visually next to it, it must also match its programmatic\n            label.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Keyboard Accessible</h4>\n          <p className=\"cbp-body\">\n            All interactive elements should be accessible by using a keyboard\n            without needing to do specific key combinations in a certain amount\n            of time. Examples of \"specific timings for individual keystrokes\"\n            include situations where a user would be required to repeat or\n            execute multiple keystrokes within a short period of time or where a\n            key must be held down for an extended period before the keystroke is\n            registered. Some types of interaction will never be able to be\n            replicated with a keyboard like freehand drawing and some gaming,\n            and those elements are exempt. There are common key commands\n            associated with certain types of interactions such as the tab key\n            allowing users to move down the tab order from one interactive\n            element to the next. Where your UI requires a non-standard key\n            command, you need to provide appropriate helper text to explain its\n            function. These keyboard shortcuts need to have the option for the\n            user to disable these functions as well. Users who access your\n            product via voice may become frustrated as saying a single letter\n            character out loud has the unintended effect of activating a\n            shortcut.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">Link Purpose</h4>\n          <p className=\"cbp-body\">\n            Your users should be able to understand where a link is taking them\n            either by the text in the link, the link is contained by text giving\n            contextual clues, or programmatically by the title attribute. The\n            title for each link also must be unique. Screen reader users will\n            not have the visual cues at their disposal to navigate the meaning\n            of 5 instances of \"Learn More\" links on a page. Developers need to\n            be more descriptive here. For instances where links are opening\n            documents, books, or articles the title of said product is\n            sufficient. The CBP Design System also utilizes the icon\n            (external-link-alt) to designate a link that will lead the user\n            outside of their current application and should be applied to all\n            said links.\n          </p>\n\n          <h4 className=\"cbp-heading-4\">\n            Programatically Identifying Interactive Elements\n          </h4>\n          <p className=\"cbp-body\">\n            In addition to labels and instruction, interactive elements should\n            be programmatically identified by name, role, and value attributes\n            for assistive technologies.\n          </p>\n          <p className=\"cbp-body\">\n            When the system changes content based on user input and this change\n            does not receive user focus, such as a status message, there is a\n            way to identify this change with the role attribute. For example as\n            the system returns 5 results after a search is conducted. At the top\n            of the results, the message 5 results found is clearly visible.\n          </p>\n          {/* @TODO: Insert Success Criterion stuff here if required */}\n        </TabPanel>\n      </article>\n    </Tabs>\n  </Layout>\n)\n"],"sourceRoot":""}