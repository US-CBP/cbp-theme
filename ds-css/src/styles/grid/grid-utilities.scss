/* 
  This class allows element to span all coloumns
  for all breakpoints.
*/
.cbp-col-full {
  grid-column: 1 / -1;
}

/*
  This mixin generates all gris utility classes
  for all responsive sizes.
*/
@mixin cbpGridColSpan ($start, $sz: "") {
  
  $columnCount: 12; /* Max column width is twelve. */
  $offset: 1; /* Offset used as cssgrids goes from 1 - 13 | 1 - 9 | 1-5 */
  $size: $sz; /* Passed in size argument for responsive size. */
  @for $i from 1 through $columnCount {
      
    @if $start < 2 {
        
      .cbp-col#{$sz}-#{$i} {
        grid-column: #{$start} / span #{$i} !important;
      }
      
    }
    @else {
      .cbp-col#{$sz}-#{($start - $offset)}-#{$i} {

        @if $i <= $columnCount - ($start - $offset) {
          grid-column: #{$start} / span #{$i} !important;

        }
        @else {
          grid-column: #{$start} / -1 !important;
        }
      }
      
    }
    
  }
  
}

@for $i from 1 through 12 {
  @include cbpGridColSpan($start:$i);
}

@include tablet-portrait-view {

  @for $i from 1 through 12 {
    @include cbpGridColSpan($start:$i, $sz:"-md");
  }

}

@include tablet-landscape-view {

  @for $i from 1 through 12 {
    @include cbpGridColSpan($start:$i, $sz:"-lg");
  }

}

@include large-desktop-view {

  @for $i from 1 through 12 {
    @include cbpGridColSpan ($start:$i, $sz:"-xl");
  }
  
}